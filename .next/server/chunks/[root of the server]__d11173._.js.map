{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/mj/aifrontier/main/web/app/api/auth/session/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport { cookies } from 'next/headers'\n\nexport async function GET() {\n  const cookieStore = await cookies()\n  const sessionCookie = cookieStore.get('session')\n  \n  if (!sessionCookie) {\n    return NextResponse.json(\n      { error: 'Not authenticated' },\n      { status: 401 }\n    )\n  }\n  \n  try {\n    const session = JSON.parse(sessionCookie.value)\n    return NextResponse.json({\n      authenticated: true,\n      user: {\n        id: session.userId,\n        name: session.userId,\n        email: `${session.userId}@example.com`,\n        role: session.userId === 'admin' ? 'Administrator' : 'User'\n      }\n    })\n  } catch (error) {\n    return NextResponse.json(\n      { error: 'Invalid session' },\n      { status: 401 }\n    )\n  }\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAChC,MAAM,gBAAgB,YAAY,GAAG,CAAC;IAEtC,IAAI,CAAC,eAAe;QAClB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAoB,GAC7B;YAAE,QAAQ;QAAI;IAElB;IAEA,IAAI;QACF,MAAM,UAAU,KAAK,KAAK,CAAC,cAAc,KAAK;QAC9C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,eAAe;YACf,MAAM;gBACJ,IAAI,QAAQ,MAAM;gBAClB,MAAM,QAAQ,MAAM;gBACpB,OAAO,GAAG,QAAQ,MAAM,CAAC,YAAY,CAAC;gBACtC,MAAM,QAAQ,MAAM,KAAK,UAAU,kBAAkB;YACvD;QACF;IACF,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAkB,GAC3B;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}