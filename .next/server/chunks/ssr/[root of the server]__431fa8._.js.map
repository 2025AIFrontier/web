{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/mj/aifrontier/main/web/app/theme-provider.tsx"],"sourcesContent":["'use client'\n\nimport { ThemeProvider } from 'next-themes'\n\nexport default function Theme({ children }: { children: React.ReactNode }) {\n  return (\n    <ThemeProvider attribute=\"class\" disableTransitionOnChange>\n      {children}\n    </ThemeProvider>\n  )\n}"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS,MAAM,EAAE,QAAQ,EAAiC;IACvE,qBACE,8OAAC,gJAAA,CAAA,gBAAa;QAAC,WAAU;QAAQ,yBAAyB;kBACvD;;;;;;AAGP"}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///Users/mj/aifrontier/main/web/app/user-provider.tsx"],"sourcesContent":["'use client'\n\nimport { createContext, useContext, useState, useEffect, ReactNode } from 'react'\n\ninterface User {\n  id: string\n  name: string\n  email: string\n  role: string\n}\n\ninterface UserContextType {\n  user: User | null\n  setUser: (user: User | null) => void\n  loading: boolean\n}\n\nconst UserContext = createContext<UserContextType | undefined>(undefined)\n\nexport function UserProvider({ children }: { children: ReactNode }) {\n  const [user, setUser] = useState<User | null>(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    // Check if user is logged in from session API\n    const checkUser = async () => {\n      try {\n        const response = await fetch('/api/auth/session')\n        \n        if (response.ok) {\n          const data = await response.json()\n          if (data.authenticated && data.user) {\n            setUser(data.user)\n          }\n        }\n      } catch (error) {\n        console.error('Error loading user:', error)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    checkUser()\n  }, [])\n\n  return (\n    <UserContext.Provider value={{ user, setUser, loading }}>\n      {children}\n    </UserContext.Provider>\n  )\n}\n\nexport function useUser() {\n  const context = useContext(UserContext)\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider')\n  }\n  return context\n}"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAiBA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS,aAAa,EAAE,QAAQ,EAA2B;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,8CAA8C;QAC9C,MAAM,YAAY;YAChB,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM;gBAE7B,IAAI,SAAS,EAAE,EAAE;oBACf,MAAM,OAAO,MAAM,SAAS,IAAI;oBAChC,IAAI,KAAK,aAAa,IAAI,KAAK,IAAI,EAAE;wBACnC,QAAQ,KAAK,IAAI;oBACnB;gBACF;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,uBAAuB;YACvC,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAS;QAAQ;kBACnD;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT"}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///Users/mj/aifrontier/main/web/app/app-provider.tsx"],"sourcesContent":["'use client'\n\nimport { createContext, Dispatch, SetStateAction, useContext, useState } from 'react'\nimport { UserProvider } from './user-provider'\n\ninterface ContextProps {\n  sidebarOpen: boolean\n  setSidebarOpen: Dispatch<SetStateAction<boolean>>\n  sidebarExpanded: boolean\n  setSidebarExpanded: Dispatch<SetStateAction<boolean>>\n}\n\nconst AppContext = createContext<ContextProps>({\n  sidebarOpen: false,\n  setSidebarOpen: (): boolean => false,\n  sidebarExpanded: false,\n  setSidebarExpanded: (): boolean => false\n})\n\nexport default function AppProvider({\n  children,\n}: {\n  children: React.ReactNode\n}) {  \n  const [sidebarOpen, setSidebarOpen] = useState<boolean>(false)\n  const [sidebarExpanded, setSidebarExpanded] = useState<boolean>(false)\n  return (\n    <AppContext.Provider value={{ sidebarOpen, setSidebarOpen, sidebarExpanded, setSidebarExpanded }}>\n      <UserProvider>\n        {children}\n      </UserProvider>\n    </AppContext.Provider>\n  )\n}\n\nexport const useAppProvider = () => useContext(AppContext)"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAYA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAgB;IAC7C,aAAa;IACb,gBAAgB,IAAe;IAC/B,iBAAiB;IACjB,oBAAoB,IAAe;AACrC;AAEe,SAAS,YAAY,EAClC,QAAQ,EAGT;IACC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IACxD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAChE,qBACE,8OAAC,WAAW,QAAQ;QAAC,OAAO;YAAE;YAAa;YAAgB;YAAiB;QAAmB;kBAC7F,cAAA,8OAAC,wHAAA,CAAA,eAAY;sBACV;;;;;;;;;;;AAIT;AAEO,MAAM,iBAAiB,IAAM,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE"}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}