{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/mj/aifrontier/main/web/app/selected-items-context.tsx"],"sourcesContent":["'use client'\n\nimport { createContext, useContext, useState } from 'react'\n\ninterface SelectedItemsContextProps {\n  selectedItems: number[]\n  setSelectedItems: (selectedItems: number[]) => void\n}\n\nconst SelectedItemsContext = createContext<SelectedItemsContextProps | undefined>(undefined)\n\nexport const SelectedItemsProvider = ({ children }: {\n  children: React.ReactNode\n}) => {\n  const [selectedItems, setSelectedItems] = useState<number[]>([])\n  return (\n    <SelectedItemsContext.Provider value={{ selectedItems, setSelectedItems }}>\n      {children}\n    </SelectedItemsContext.Provider>\n  )\n}\n\nexport const useSelectedItems = () => {\n  const context = useContext(SelectedItemsContext)\n  if (!context) {\n    throw new Error('useSelectedItems must be used within a SelectedItemsProvider')\n  }\n  return context\n}"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AASA,MAAM,qCAAuB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAyC;AAE3E,MAAM,wBAAwB,CAAC,EAAE,QAAQ,EAE/C;IACC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAC/D,qBACE,8OAAC,qBAAqB,QAAQ;QAAC,OAAO;YAAE;YAAe;QAAiB;kBACrE;;;;;;AAGP;AAEO,MAAM,mBAAmB;IAC9B,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT"}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///Users/mj/aifrontier/main/web/app/%28default%29/human-network/employees/employees-sidebar.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\n\nexport default function EmployeesSidebar() {\n  const [remoteOnly, setRemoteOnly] = useState<boolean>(false)\n  const [fullTimeOnly, setFullTimeOnly] = useState<boolean>(true)\n  const [companySearch, setCompanySearch] = useState<string>('')\n  const [showCompanyList, setShowCompanyList] = useState<boolean>(false)\n  \n  const companies = [\n    '삼성전자',\n    '삼성디스플레이',\n    '삼성SDI',\n    '삼성전기',\n    'LG전자',\n    'SK하이닉스',\n    '현대자동차',\n    '카카오',\n    '네이버',\n    '쿠팡'\n  ]\n  \n  const filteredCompanies = companies.filter(company => \n    company.toLowerCase().includes(companySearch.toLowerCase())\n  )\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Alert Box */}\n      <div className=\"relative bg-linear-to-r from-violet-500/[0.12] dark:from-violet-500/[0.24] to-violet-500/[0.04] rounded-lg p-5\">\n        <div className=\"absolute bottom-0 -mb-3\">\n          <svg width=\"44\" height=\"42\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n            <defs>\n              <linearGradient x1=\"50%\" y1=\"0%\" x2=\"50%\" y2=\"100%\" id=\"ill-b\">\n                <stop stopColor=\"#B7ACFF\" offset=\"0%\" />\n                <stop stopColor=\"#9C8CFF\" offset=\"100%\" />\n              </linearGradient>\n              <linearGradient x1=\"50%\" y1=\"24.537%\" x2=\"50%\" y2=\"100%\" id=\"ill-c\">\n                <stop stopColor=\"#4634B1\" offset=\"0%\" />\n                <stop stopColor=\"#4634B1\" stopOpacity=\"0\" offset=\"100%\" />\n              </linearGradient>\n              <path id=\"ill-a\" d=\"m20 0 20 40-20-6.25L0 40z\" />\n            </defs>\n            <g transform=\"scale(-1 1) rotate(-51 -11.267 67.017)\" fill=\"none\" fillRule=\"evenodd\">\n              <mask id=\"ill-d\" fill=\"#fff\">\n                <use xlinkHref=\"#ill-a\" />\n              </mask>\n              <use fill=\"url(#ill-b)\" xlinkHref=\"#ill-a\" />\n              <path fill=\"url(#ill-c)\" mask=\"url(#ill-d)\" d=\"M20.586-7.913h25v47.5h-25z\" />\n            </g>\n          </svg>\n        </div>\n        <div className=\"relative\">\n          <div className=\"text-sm font-medium text-gray-800 dark:text-violet-200 mb-2\">빠른 연락처 찾기를 원하시나요?</div>\n          <div className=\"text-right\">\n            <a className=\"text-sm font-medium text-violet-500 hover:text-violet-600\" href=\"#0\">\n              즐겨찾기 설정 -&gt;\n            </a>\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"bg-white dark:bg-gray-800 shadow-sm rounded-xl p-5 min-w-[15rem]\">\n        <div className=\"grid md:grid-cols-2 xl:grid-cols-1 gap-6\">\n          \n          {/* 회사 필터 */}\n          <div className=\"relative\">\n            <div className=\"text-sm text-gray-800 dark:text-gray-100 font-semibold mb-3\">회사</div>\n            <div className=\"relative\">\n              <input \n                type=\"text\" \n                className=\"form-input w-full pl-9 text-sm\"\n                placeholder=\"회사명 검색...\"\n                value={companySearch}\n                onChange={(e) => setCompanySearch(e.target.value)}\n                onFocus={() => setShowCompanyList(true)}\n                onBlur={() => setTimeout(() => setShowCompanyList(false), 200)}\n              />\n              <div className=\"absolute inset-0 right-auto flex items-center pointer-events-none\">\n                <svg className=\"w-4 h-4 shrink-0 fill-current text-gray-400 dark:text-gray-500 ml-3\" viewBox=\"0 0 16 16\">\n                  <path d=\"M7 14c-3.86 0-7-3.14-7-7s3.14-7 7-7 7 3.14 7 7-3.14 7-7 7zM7 2C4.243 2 2 4.243 2 7s2.243 5 5 5 5-2.243 5-5-2.243-5-5-5z\" />\n                  <path d=\"M15.707 14.293L13.314 11.9a8.019 8.019 0 01-1.414 1.414l2.393 2.393a.997.997 0 001.414 0 .999.999 0 000-1.414z\" />\n                </svg>\n              </div>\n              \n              {/* 회사 리스트 드롭다운 */}\n              {showCompanyList && (\n                <div className=\"absolute z-10 top-full left-0 right-0 mt-1 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg max-h-48 overflow-y-auto\">\n                  {filteredCompanies.length > 0 ? (\n                    <ul className=\"py-1\">\n                      {filteredCompanies.map((company, index) => (\n                        <li key={index}>\n                          <button\n                            className=\"w-full text-left px-3 py-2 text-sm text-gray-600 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700/50 hover:text-gray-900 dark:hover:text-gray-100\"\n                            onMouseDown={(e) => {\n                              e.preventDefault()\n                              setCompanySearch(company)\n                              setShowCompanyList(false)\n                            }}\n                          >\n                            {company}\n                          </button>\n                        </li>\n                      ))}\n                    </ul>\n                  ) : (\n                    <div className=\"px-3 py-2 text-sm text-gray-500 dark:text-gray-400\">\n                      검색 결과가 없습니다\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n          \n          {/* 부서 필터 */}\n          <div>\n            <div className=\"text-sm text-gray-800 dark:text-gray-100 font-semibold mb-3\">부서</div>\n            <ul className=\"space-y-2\">\n              <li>\n                <label className=\"flex items-center\">\n                  <input type=\"checkbox\" className=\"form-checkbox\" defaultChecked />\n                  <span className=\"text-sm text-gray-600 dark:text-gray-300 font-medium ml-2\">개발팀</span>\n                </label>\n              </li>\n              <li>\n                <label className=\"flex items-center\">\n                  <input type=\"checkbox\" className=\"form-checkbox\" />\n                  <span className=\"text-sm text-gray-600 dark:text-gray-300 font-medium ml-2\">디자인팀</span>\n                </label>\n              </li>\n              <li>\n                <label className=\"flex items-center\">\n                  <input type=\"checkbox\" className=\"form-checkbox\" />\n                  <span className=\"text-sm text-gray-600 dark:text-gray-300 font-medium ml-2\">마케팅팀</span>\n                </label>\n              </li>\n              <li>\n                <label className=\"flex items-center\">\n                  <input type=\"checkbox\" className=\"form-checkbox\" />\n                  <span className=\"text-sm text-gray-600 dark:text-gray-300 font-medium ml-2\">영업팀</span>\n                </label>\n              </li>\n              <li>\n                <label className=\"flex items-center\">\n                  <input type=\"checkbox\" className=\"form-checkbox\" />\n                  <span className=\"text-sm text-gray-600 dark:text-gray-300 font-medium ml-2\">인사팀</span>\n                </label>\n              </li>\n            </ul>\n          </div>\n\n          {/* 재직 상태 */}\n          <div>\n            <div className=\"text-sm text-gray-800 dark:text-gray-100 font-semibold mb-3\">재직 상태</div>\n            <div className=\"flex items-center\">\n              <div className=\"form-switch\">\n                <input\n                  type=\"checkbox\"\n                  id=\"status-toggle\"\n                  className=\"sr-only\"\n                  checked={fullTimeOnly}\n                  onChange={() => setFullTimeOnly(!fullTimeOnly)}\n                />\n                <label htmlFor=\"status-toggle\">\n                  <span className=\"bg-white shadow-sm\" aria-hidden=\"true\"></span>\n                  <span className=\"sr-only\">재직자만</span>\n                </label>\n              </div>\n              <div className=\"text-sm text-gray-400 dark:text-gray-500 italic ml-2\">{fullTimeOnly ? '재직중' : '전체'}</div>\n            </div>\n            <div className=\"text-sm dark:text-gray-500 italic mt-3\">현재 재직중인 직원만 표시</div>\n          </div>\n\n          {/* 직급 필터 */}\n          <div>\n            <div className=\"text-sm text-gray-800 dark:text-gray-100 font-semibold mb-3\">직급</div>\n            <ul className=\"space-y-2\">\n              <li>\n                <label className=\"flex items-center\">\n                  <input type=\"checkbox\" className=\"form-checkbox\" />\n                  <span className=\"text-sm text-gray-600 dark:text-gray-300 font-medium ml-2\">임원</span>\n                </label>\n              </li>\n              <li>\n                <label className=\"flex items-center\">\n                  <input type=\"checkbox\" className=\"form-checkbox\" defaultChecked />\n                  <span className=\"text-sm text-gray-600 dark:text-gray-300 font-medium ml-2\">매니저</span>\n                </label>\n              </li>\n              <li>\n                <label className=\"flex items-center\">\n                  <input type=\"checkbox\" className=\"form-checkbox\" defaultChecked />\n                  <span className=\"text-sm text-gray-600 dark:text-gray-300 font-medium ml-2\">시니어</span>\n                </label>\n              </li>\n              <li>\n                <label className=\"flex items-center\">\n                  <input type=\"checkbox\" className=\"form-checkbox\" />\n                  <span className=\"text-sm text-gray-600 dark:text-gray-300 font-medium ml-2\">주니어</span>\n                </label>\n              </li>\n            </ul>\n          </div>\n\n          {/* 원격 근무 */}\n          <div>\n            <div className=\"text-sm text-gray-800 dark:text-gray-100 font-semibold mb-3\">원격 근무</div>\n            <div className=\"flex items-center\">\n              <div className=\"form-switch\">\n                <input\n                  type=\"checkbox\"\n                  id=\"remote-toggle\"\n                  className=\"sr-only\"\n                  checked={remoteOnly}\n                  onChange={() => setRemoteOnly(!remoteOnly)}\n                />\n                <label htmlFor=\"remote-toggle\">\n                  <span className=\"bg-white shadow-sm\" aria-hidden=\"true\"></span>\n                  <span className=\"sr-only\">원격근무</span>\n                </label>\n              </div>\n              <div className=\"text-sm text-gray-400 dark:text-gray-500 italic ml-2\">{remoteOnly ? '원격' : '전체'}</div>\n            </div>\n            <div className=\"text-sm dark:text-gray-500 italic mt-3\">원격 근무 가능한 직원 표시</div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 889, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 895, "column": 0}, "map": {"version":3,"sources":["file:///Users/mj/aifrontier/main/web/components/utils/use-item-selection.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { useSelectedItems } from '@/app/selected-items-context'\n\nexport const useItemSelection = (items: any[]) => {\n  const { selectedItems, setSelectedItems } = useSelectedItems()\n  const [isAllSelected, setIsAllSelected] = useState<boolean>(false)\n\n  const handleCheckboxChange = (id: number, checked: boolean) => {\n    setIsAllSelected(false)\n    if (checked) {\n      setSelectedItems([...selectedItems, id])\n    } else {\n      setSelectedItems(selectedItems.filter((itemId) => itemId !== id))\n    }\n  }\n\n  const handleSelectAllChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setIsAllSelected(e.target.checked)\n    if (e.target.checked) {\n      setSelectedItems(items.map((item) => item.id))\n    } else {\n      setSelectedItems([])\n    }\n  }\n\n  return {\n    selectedItems,\n    isAllSelected,\n    handleCheckboxChange,\n    handleSelectAllChange,\n  }\n}\n"],"names":[],"mappings":";;;AAEA;AACA;AAHA;;;AAKO,MAAM,mBAAmB,CAAC;IAC/B,MAAM,EAAE,aAAa,EAAE,gBAAgB,EAAE,GAAG,CAAA,GAAA,oIAAA,CAAA,mBAAgB,AAAD;IAC3D,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAE5D,MAAM,uBAAuB,CAAC,IAAY;QACxC,iBAAiB;QACjB,IAAI,SAAS;YACX,iBAAiB;mBAAI;gBAAe;aAAG;QACzC,OAAO;YACL,iBAAiB,cAAc,MAAM,CAAC,CAAC,SAAW,WAAW;QAC/D;IACF;IAEA,MAAM,wBAAwB,CAAC;QAC7B,iBAAiB,EAAE,MAAM,CAAC,OAAO;QACjC,IAAI,EAAE,MAAM,CAAC,OAAO,EAAE;YACpB,iBAAiB,MAAM,GAAG,CAAC,CAAC,OAAS,KAAK,EAAE;QAC9C,OAAO;YACL,iBAAiB,EAAE;QACrB;IACF;IAEA,OAAO;QACL;QACA;QACA;QACA;IACF;AACF"}},
    {"offset": {"line": 932, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 938, "column": 0}, "map": {"version":3,"sources":["file:///Users/mj/aifrontier/main/web/app/%28default%29/human-network/employees/employees-table-item.tsx"],"sourcesContent":["'use client'\n\nimport Image from 'next/image'\nimport { Employee } from './employees-table'\n\ninterface EmployeesTableItemProps {\n  employee: Employee\n  onCheckboxChange: (id: number, checked: boolean) => void\n  isSelected: boolean\n}\n\nexport default function EmployeesTableItem({ \n  employee, \n  onCheckboxChange, \n  isSelected \n}: EmployeesTableItemProps) {\n  \n  const handleCheckboxChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onCheckboxChange(employee.id, e.target.checked)\n  }\n\n  const getStatusIcon = (status: string) => {\n    switch(status) {\n      case 'active':\n        return (\n          <div className=\"inline-flex items-center justify-center w-2 h-2\">\n            <span className=\"block w-2 h-2 bg-green-500 rounded-full\"></span>\n          </div>\n        )\n      case 'away':\n        return (\n          <div className=\"inline-flex items-center justify-center w-2 h-2\">\n            <span className=\"block w-2 h-2 bg-yellow-500 rounded-full\"></span>\n          </div>\n        )\n      case 'busy':\n        return (\n          <div className=\"inline-flex items-center justify-center w-2 h-2\">\n            <span className=\"block w-2 h-2 bg-red-500 rounded-full\"></span>\n          </div>\n        )\n      default:\n        return (\n          <div className=\"inline-flex items-center justify-center w-2 h-2\">\n            <span className=\"block w-2 h-2 bg-gray-400 rounded-full\"></span>\n          </div>\n        )\n    }\n  }\n\n\n  return (\n    <tr>\n      <td className=\"px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap w-px\">\n        <div className=\"flex items-center\">\n          <label className=\"inline-flex\">\n            <span className=\"sr-only\">Select</span>\n            <input \n              className=\"form-checkbox\" \n              type=\"checkbox\" \n              onChange={handleCheckboxChange} \n              checked={isSelected} \n            />\n          </label>\n        </div>\n      </td>\n      <td className=\"px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap w-px\">\n        <div className=\"flex items-center\">\n          {getStatusIcon(employee.status)}\n        </div>\n      </td>\n      <td className=\"px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap\">\n        <div className=\"flex items-center\">\n          <div className=\"w-10 h-10 shrink-0 mr-2 sm:mr-3\">\n            <Image \n              className=\"rounded-full\" \n              src={employee.image} \n              width={40} \n              height={40} \n              alt={employee.name} \n            />\n          </div>\n          <div className=\"font-medium text-gray-800 dark:text-gray-100\">{employee.name}</div>\n        </div>\n      </td>\n      <td className=\"px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap\">\n        <div className=\"text-left\">{employee.department}</div>\n      </td>\n      <td className=\"px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap\">\n        <div className=\"text-left\">{employee.role}</div>\n      </td>\n      <td className=\"px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap\">\n        <div className=\"text-left\">{employee.position}</div>\n      </td>\n      <td className=\"px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap\">\n        <div className=\"text-left\">{employee.email}</div>\n      </td>\n      <td className=\"px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap\">\n        <div className=\"text-left\">{employee.phone}</div>\n      </td>\n      <td className=\"px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap\">\n        <button className=\"text-gray-400 hover:text-gray-500 dark:text-gray-500 dark:hover:text-gray-400 rounded-full\">\n          <span className=\"sr-only\">Menu</span>\n          <svg className=\"w-8 h-8 fill-current\" viewBox=\"0 0 32 32\">\n            <circle cx=\"16\" cy=\"16\" r=\"2\" />\n            <circle cx=\"10\" cy=\"16\" r=\"2\" />\n            <circle cx=\"22\" cy=\"16\" r=\"2\" />\n          </svg>\n        </button>\n      </td>\n    </tr>\n  )\n}"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAWe,SAAS,mBAAmB,EACzC,QAAQ,EACR,gBAAgB,EAChB,UAAU,EACc;IAExB,MAAM,uBAAuB,CAAC;QAC5B,iBAAiB,SAAS,EAAE,EAAE,EAAE,MAAM,CAAC,OAAO;IAChD;IAEA,MAAM,gBAAgB,CAAC;QACrB,OAAO;YACL,KAAK;gBACH,qBACE,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAK,WAAU;;;;;;;;;;;YAGtB,KAAK;gBACH,qBACE,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAK,WAAU;;;;;;;;;;;YAGtB,KAAK;gBACH,qBACE,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAK,WAAU;;;;;;;;;;;YAGtB;gBACE,qBACE,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAK,WAAU;;;;;;;;;;;QAGxB;IACF;IAGA,qBACE,8OAAC;;0BACC,8OAAC;gBAAG,WAAU;0BACZ,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAM,WAAU;;0CACf,8OAAC;gCAAK,WAAU;0CAAU;;;;;;0CAC1B,8OAAC;gCACC,WAAU;gCACV,MAAK;gCACL,UAAU;gCACV,SAAS;;;;;;;;;;;;;;;;;;;;;;0BAKjB,8OAAC;gBAAG,WAAU;0BACZ,cAAA,8OAAC;oBAAI,WAAU;8BACZ,cAAc,SAAS,MAAM;;;;;;;;;;;0BAGlC,8OAAC;gBAAG,WAAU;0BACZ,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;gCACJ,WAAU;gCACV,KAAK,SAAS,KAAK;gCACnB,OAAO;gCACP,QAAQ;gCACR,KAAK,SAAS,IAAI;;;;;;;;;;;sCAGtB,8OAAC;4BAAI,WAAU;sCAAgD,SAAS,IAAI;;;;;;;;;;;;;;;;;0BAGhF,8OAAC;gBAAG,WAAU;0BACZ,cAAA,8OAAC;oBAAI,WAAU;8BAAa,SAAS,UAAU;;;;;;;;;;;0BAEjD,8OAAC;gBAAG,WAAU;0BACZ,cAAA,8OAAC;oBAAI,WAAU;8BAAa,SAAS,IAAI;;;;;;;;;;;0BAE3C,8OAAC;gBAAG,WAAU;0BACZ,cAAA,8OAAC;oBAAI,WAAU;8BAAa,SAAS,QAAQ;;;;;;;;;;;0BAE/C,8OAAC;gBAAG,WAAU;0BACZ,cAAA,8OAAC;oBAAI,WAAU;8BAAa,SAAS,KAAK;;;;;;;;;;;0BAE5C,8OAAC;gBAAG,WAAU;0BACZ,cAAA,8OAAC;oBAAI,WAAU;8BAAa,SAAS,KAAK;;;;;;;;;;;0BAE5C,8OAAC;gBAAG,WAAU;0BACZ,cAAA,8OAAC;oBAAO,WAAU;;sCAChB,8OAAC;4BAAK,WAAU;sCAAU;;;;;;sCAC1B,8OAAC;4BAAI,WAAU;4BAAuB,SAAQ;;8CAC5C,8OAAC;oCAAO,IAAG;oCAAK,IAAG;oCAAK,GAAE;;;;;;8CAC1B,8OAAC;oCAAO,IAAG;oCAAK,IAAG;oCAAK,GAAE;;;;;;8CAC1B,8OAAC;oCAAO,IAAG;oCAAK,IAAG;oCAAK,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMtC"}},
    {"offset": {"line": 1257, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1263, "column": 0}, "map": {"version":3,"sources":["file:///Users/mj/aifrontier/main/web/app/%28default%29/human-network/employees/employees-table.tsx"],"sourcesContent":["'use client'\n\nimport { StaticImageData } from 'next/image'\nimport { useItemSelection } from '@/components/utils/use-item-selection'\nimport EmployeesTableItem from './employees-table-item'\n\nexport interface Employee {\n  id: number\n  image: StaticImageData\n  name: string\n  department: string\n  role: string\n  position: string\n  email: string\n  phone: string\n  status: 'active' | 'away' | 'busy' | 'offline'\n}\n\nexport default function EmployeesTable({ employees }: { employees: Employee[] }) {\n  const {\n    selectedItems,\n    isAllSelected,\n    handleCheckboxChange,\n    handleSelectAllChange,\n  } = useItemSelection(employees)\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 shadow-sm rounded-xl relative\">\n      <header className=\"px-5 py-4\">\n        <h2 className=\"font-semibold text-gray-800 dark:text-gray-100\">\n          직원 목록 <span className=\"text-gray-400 dark:text-gray-500 font-medium\">{employees.length}</span>\n        </h2>\n      </header>\n      <div>\n        {/* Table */}\n        <div className=\"overflow-x-auto\">\n          <table className=\"table-auto w-full dark:text-gray-300\">\n            {/* Table header */}\n            <thead className=\"text-xs font-semibold uppercase text-gray-500 dark:text-gray-400 bg-gray-50 dark:bg-gray-900/20 border-t border-b border-gray-100 dark:border-gray-700/60\">\n              <tr>\n                <th className=\"px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap w-px\">\n                  <div className=\"flex items-center\">\n                    <label className=\"inline-flex\">\n                      <span className=\"sr-only\">Select all</span>\n                      <input \n                        className=\"form-checkbox\" \n                        type=\"checkbox\" \n                        onChange={handleSelectAllChange} \n                        checked={isAllSelected} \n                      />\n                    </label>\n                  </div>\n                </th>\n                <th className=\"px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap w-px\">\n                  <span className=\"sr-only\">Status</span>\n                </th>\n                <th className=\"px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap\">\n                  <div className=\"font-semibold text-left\">이름</div>\n                </th>\n                <th className=\"px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap\">\n                  <div className=\"font-semibold text-left\">부서</div>\n                </th>\n                <th className=\"px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap\">\n                  <div className=\"font-semibold text-left\">직무</div>\n                </th>\n                <th className=\"px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap\">\n                  <div className=\"font-semibold text-left\">직급</div>\n                </th>\n                <th className=\"px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap\">\n                  <div className=\"font-semibold text-left\">이메일</div>\n                </th>\n                <th className=\"px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap\">\n                  <div className=\"font-semibold text-left\">연락처</div>\n                </th>\n                <th className=\"px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap\">\n                  <span className=\"sr-only\">Menu</span>\n                </th>\n              </tr>\n            </thead>\n            {/* Table body */}\n            <tbody className=\"text-sm divide-y divide-gray-100 dark:divide-gray-700/60\">\n              {employees.map(employee => (\n                <EmployeesTableItem\n                  key={employee.id}\n                  employee={employee}\n                  onCheckboxChange={handleCheckboxChange}\n                  isSelected={selectedItems.includes(employee.id)} \n                />\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAkBe,SAAS,eAAe,EAAE,SAAS,EAA6B;IAC7E,MAAM,EACJ,aAAa,EACb,aAAa,EACb,oBAAoB,EACpB,qBAAqB,EACtB,GAAG,CAAA,GAAA,gJAAA,CAAA,mBAAgB,AAAD,EAAE;IAErB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAO,WAAU;0BAChB,cAAA,8OAAC;oBAAG,WAAU;;wBAAiD;sCACvD,8OAAC;4BAAK,WAAU;sCAAgD,UAAU,MAAM;;;;;;;;;;;;;;;;;0BAG1F,8OAAC;0BAEC,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAM,WAAU;;0CAEf,8OAAC;gCAAM,WAAU;0CACf,cAAA,8OAAC;;sDACC,8OAAC;4CAAG,WAAU;sDACZ,cAAA,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC;oDAAM,WAAU;;sEACf,8OAAC;4DAAK,WAAU;sEAAU;;;;;;sEAC1B,8OAAC;4DACC,WAAU;4DACV,MAAK;4DACL,UAAU;4DACV,SAAS;;;;;;;;;;;;;;;;;;;;;;sDAKjB,8OAAC;4CAAG,WAAU;sDACZ,cAAA,8OAAC;gDAAK,WAAU;0DAAU;;;;;;;;;;;sDAE5B,8OAAC;4CAAG,WAAU;sDACZ,cAAA,8OAAC;gDAAI,WAAU;0DAA0B;;;;;;;;;;;sDAE3C,8OAAC;4CAAG,WAAU;sDACZ,cAAA,8OAAC;gDAAI,WAAU;0DAA0B;;;;;;;;;;;sDAE3C,8OAAC;4CAAG,WAAU;sDACZ,cAAA,8OAAC;gDAAI,WAAU;0DAA0B;;;;;;;;;;;sDAE3C,8OAAC;4CAAG,WAAU;sDACZ,cAAA,8OAAC;gDAAI,WAAU;0DAA0B;;;;;;;;;;;sDAE3C,8OAAC;4CAAG,WAAU;sDACZ,cAAA,8OAAC;gDAAI,WAAU;0DAA0B;;;;;;;;;;;sDAE3C,8OAAC;4CAAG,WAAU;sDACZ,cAAA,8OAAC;gDAAI,WAAU;0DAA0B;;;;;;;;;;;sDAE3C,8OAAC;4CAAG,WAAU;sDACZ,cAAA,8OAAC;gDAAK,WAAU;0DAAU;;;;;;;;;;;;;;;;;;;;;;0CAKhC,8OAAC;gCAAM,WAAU;0CACd,UAAU,GAAG,CAAC,CAAA,yBACb,8OAAC,kLAAA,CAAA,UAAkB;wCAEjB,UAAU;wCACV,kBAAkB;wCAClB,YAAY,cAAc,QAAQ,CAAC,SAAS,EAAE;uCAHzC,SAAS,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYlC"}},
    {"offset": {"line": 1524, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1530, "column": 0}, "map": {"version":3,"sources":["file:///Users/mj/aifrontier/main/web/app/%28default%29/human-network/employees/sort-dropdown.tsx"],"sourcesContent":["'use client'\n\nimport { Fragment, useState } from 'react'\nimport { Menu, MenuButton, MenuItem, MenuItems } from '@headlessui/react'\n\nexport default function DropdownSort({ align = 'right' }: { align?: 'left' | 'right' }) {\n  const [selected, setSelected] = useState<string>('최신순')\n\n  const options = [\n    { value: 'latest', label: '최신순' },\n    { value: 'name', label: '이름순' },\n    { value: 'department', label: '부서순' },\n    { value: 'position', label: '직급순' },\n  ]\n\n  return (\n    <Menu as=\"div\" className=\"relative inline-flex\">\n      <MenuButton className=\"btn-sm justify-between min-w-[11rem] bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700/60 hover:border-gray-300 dark:hover:border-gray-600 text-gray-600 hover:text-gray-800 dark:text-gray-300 dark:hover:text-gray-100\">\n        <span className=\"flex items-center\">\n          <span>{selected}</span>\n        </span>\n        <svg className=\"shrink-0 ml-1 fill-current text-gray-400 dark:text-gray-500\" width=\"11\" height=\"7\" viewBox=\"0 0 11 7\">\n          <path d=\"M5.4 6.8L0 1.4 1.4 0l4 4 4-4 1.4 1.4z\" />\n        </svg>\n      </MenuButton>\n      <MenuItems\n        as={Fragment}\n        className={`origin-top-right z-10 absolute top-full min-w-[11rem] bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700/60 pt-1.5 rounded-lg shadow-lg overflow-hidden mt-1 ${\n          align === 'right' ? 'right-0' : 'left-0'\n        }`}\n      >\n        <div className=\"text-xs font-semibold text-gray-400 dark:text-gray-500 uppercase pt-1.5 pb-2 px-3\">정렬</div>\n        <ul className=\"mb-4\">\n          {options.map((option) => (\n            <MenuItem key={option.value} as={Fragment}>\n              {({ focus }) => (\n                <button\n                  className={`font-medium text-sm w-full text-left py-1 px-3 ${\n                    focus ? 'bg-gray-50 dark:bg-gray-700/20' : ''\n                  } ${selected === option.label ? 'text-violet-500' : 'text-gray-600 dark:text-gray-300'}`}\n                  onClick={() => setSelected(option.label)}\n                >\n                  {option.label}\n                </button>\n              )}\n            </MenuItem>\n          ))}\n        </ul>\n      </MenuItems>\n    </Menu>\n  )\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS,aAAa,EAAE,QAAQ,OAAO,EAAgC;IACpF,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAEjD,MAAM,UAAU;QACd;YAAE,OAAO;YAAU,OAAO;QAAM;QAChC;YAAE,OAAO;YAAQ,OAAO;QAAM;QAC9B;YAAE,OAAO;YAAc,OAAO;QAAM;QACpC;YAAE,OAAO;YAAY,OAAO;QAAM;KACnC;IAED,qBACE,8OAAC,2KAAA,CAAA,OAAI;QAAC,IAAG;QAAM,WAAU;;0BACvB,8OAAC,2KAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,8OAAC;wBAAK,WAAU;kCACd,cAAA,8OAAC;sCAAM;;;;;;;;;;;kCAET,8OAAC;wBAAI,WAAU;wBAA8D,OAAM;wBAAK,QAAO;wBAAI,SAAQ;kCACzG,cAAA,8OAAC;4BAAK,GAAE;;;;;;;;;;;;;;;;;0BAGZ,8OAAC,2KAAA,CAAA,YAAS;gBACR,IAAI,qMAAA,CAAA,WAAQ;gBACZ,WAAW,CAAC,gLAAgL,EAC1L,UAAU,UAAU,YAAY,UAChC;;kCAEF,8OAAC;wBAAI,WAAU;kCAAoF;;;;;;kCACnG,8OAAC;wBAAG,WAAU;kCACX,QAAQ,GAAG,CAAC,CAAC,uBACZ,8OAAC,2KAAA,CAAA,WAAQ;gCAAoB,IAAI,qMAAA,CAAA,WAAQ;0CACtC,CAAC,EAAE,KAAK,EAAE,iBACT,8OAAC;wCACC,WAAW,CAAC,+CAA+C,EACzD,QAAQ,mCAAmC,GAC5C,CAAC,EAAE,aAAa,OAAO,KAAK,GAAG,oBAAoB,oCAAoC;wCACxF,SAAS,IAAM,YAAY,OAAO,KAAK;kDAEtC,OAAO,KAAK;;;;;;+BARJ,OAAO,KAAK;;;;;;;;;;;;;;;;;;;;;;AAiBvC"}},
    {"offset": {"line": 1652, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}