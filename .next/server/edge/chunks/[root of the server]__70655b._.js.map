{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\n\n// 로그인이 필요 없는 public 경로들\nconst publicPaths = ['/signin', '/signup', '/reset-password']\nconst authPaths = ['/signin', '/signup', '/reset-password']\n\nexport function middleware(request: NextRequest) {\n  const { pathname } = request.nextUrl\n  \n  // API 경로는 통과\n  if (pathname.startsWith('/api/')) {\n    return NextResponse.next()\n  }\n  \n  // 세션 쿠키 확인\n  const session = request.cookies.get('session')\n  \n  // 로그인 된 사용자가 auth 페이지 접근 시 대시보드로 리다이렉트\n  if (session && authPaths.some(path => pathname.startsWith(path))) {\n    const url = request.nextUrl.clone()\n    url.pathname = '/dashboard'\n    return NextResponse.redirect(url)\n  }\n  \n  // 로그인 안 된 사용자가 보호된 페이지 접근 시 로그인 페이지로\n  if (!session && !publicPaths.some(path => pathname.startsWith(path))) {\n    const url = request.nextUrl.clone()\n    url.pathname = '/signin'\n    url.searchParams.set('from', pathname)\n    return NextResponse.redirect(url)\n  }\n  \n  return NextResponse.next()\n}\n\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except for the ones starting with:\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     * - public folder\n     * - api routes\n     */\n    '/((?!_next/static|_next/image|favicon.ico|.*\\\\.(?:svg|png|jpg|jpeg|gif|webp)$).*)',\n  ],\n}"],"names":[],"mappings":";;;;AAAA;AAAA;;AAGA,wBAAwB;AACxB,MAAM,cAAc;IAAC;IAAW;IAAW;CAAkB;AAC7D,MAAM,YAAY;IAAC;IAAW;IAAW;CAAkB;AAEpD,SAAS,WAAW,OAAoB;IAC7C,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IAEpC,aAAa;IACb,IAAI,SAAS,UAAU,CAAC,UAAU;QAChC,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,WAAW;IACX,MAAM,UAAU,QAAQ,OAAO,CAAC,GAAG,CAAC;IAEpC,uCAAuC;IACvC,IAAI,WAAW,UAAU,IAAI,CAAC,CAAA,OAAQ,SAAS,UAAU,CAAC,QAAQ;QAChE,MAAM,MAAM,QAAQ,OAAO,CAAC,KAAK;QACjC,IAAI,QAAQ,GAAG;QACf,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,qCAAqC;IACrC,IAAI,CAAC,WAAW,CAAC,YAAY,IAAI,CAAC,CAAA,OAAQ,SAAS,UAAU,CAAC,QAAQ;QACpE,MAAM,MAAM,QAAQ,OAAO,CAAC,KAAK;QACjC,IAAI,QAAQ,GAAG;QACf,IAAI,YAAY,CAAC,GAAG,CAAC,QAAQ;QAC7B,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;;KAOC,GACD;KACD;AACH"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}