/* [project]/app/css/style.css [app-client] (css) */
@layer theme, base, components, utilities;

@layer theme {
  :root, :host {
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    --color-red-50: #ffe8e8;
    --color-red-100: #ffd1d1;
    --color-red-200: #ffb2b2;
    --color-red-300: #ff9494;
    --color-red-400: #ff7474;
    --color-red-500: #ff5656;
    --color-red-600: #fa4949;
    --color-red-700: #e63939;
    --color-red-800: #c52727;
    --color-red-900: #941818;
    --color-orange-500: oklch(.705 .213 47.604);
    --color-orange-600: oklch(.646 .222 41.116);
    --color-amber-100: oklch(.962 .059 95.617);
    --color-amber-400: oklch(.828 .189 84.429);
    --color-amber-500: oklch(.769 .188 70.08);
    --color-amber-600: oklch(.666 .179 58.318);
    --color-amber-900: oklch(.414 .112 45.904);
    --color-yellow-100: #ffe7a0;
    --color-yellow-500: #f0bb33;
    --color-yellow-600: #dfad2b;
    --color-yellow-700: #bc9021;
    --color-green-50: #d2ffe2;
    --color-green-100: #b1fdcd;
    --color-green-300: #67e294;
    --color-green-400: #4bd37d;
    --color-green-500: #3ec972;
    --color-green-600: #34bd68;
    --color-green-700: #239f52;
    --color-green-900: #0f5429;
    --color-cyan-500: oklch(.715 .143 215.221);
    --color-cyan-600: oklch(.609 .126 221.723);
    --color-sky-500: #67bfff;
    --color-sky-600: #56b1f3;
    --color-sky-700: #3193da;
    --color-blue-50: oklch(.97 .014 254.604);
    --color-blue-100: oklch(.932 .032 255.585);
    --color-blue-200: oklch(.882 .059 254.128);
    --color-blue-300: oklch(.809 .105 251.813);
    --color-blue-400: oklch(.707 .165 254.624);
    --color-blue-500: oklch(.623 .214 259.815);
    --color-blue-600: oklch(.546 .245 262.881);
    --color-blue-700: oklch(.488 .243 264.376);
    --color-blue-800: oklch(.424 .199 265.638);
    --color-blue-900: oklch(.379 .146 265.522);
    --color-indigo-500: oklch(.585 .233 277.117);
    --color-indigo-600: oklch(.511 .262 276.966);
    --color-indigo-700: oklch(.457 .24 277.023);
    --color-violet-50: #f1eeff;
    --color-violet-100: #e6e1ff;
    --color-violet-200: #d2cbff;
    --color-violet-300: #b7acff;
    --color-violet-400: #9c8cff;
    --color-violet-500: #8470ff;
    --color-violet-600: #755ff8;
    --color-violet-700: #5d47de;
    --color-violet-800: #4634b1;
    --color-violet-900: #2f227c;
    --color-purple-100: oklch(.946 .033 307.174);
    --color-purple-200: oklch(.902 .063 306.703);
    --color-purple-300: oklch(.827 .119 306.383);
    --color-purple-400: oklch(.714 .203 305.504);
    --color-purple-500: oklch(.627 .265 303.9);
    --color-purple-600: oklch(.558 .288 302.321);
    --color-purple-700: oklch(.496 .265 301.924);
    --color-purple-900: oklch(.381 .176 304.987);
    --color-pink-500: oklch(.656 .241 354.308);
    --color-pink-700: oklch(.525 .223 3.958);
    --color-gray-50: #f9fafb;
    --color-gray-100: #f3f4f6;
    --color-gray-200: #e5e7eb;
    --color-gray-300: #bfc4cd;
    --color-gray-400: #9ca3af;
    --color-gray-500: #6b7280;
    --color-gray-600: #4b5563;
    --color-gray-700: #374151;
    --color-gray-800: #1f2937;
    --color-gray-900: #111827;
    --color-gray-950: #030712;
    --color-black: #000;
    --color-white: #fff;
    --spacing: .25rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-xl: 36rem;
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --container-4xl: 56rem;
    --text-xs: .75rem;
    --text-xs--line-height: 1.5;
    --text-sm: .875rem;
    --text-sm--line-height: 1.5715;
    --text-lg: 1.125rem;
    --text-lg--line-height: 1.5;
    --text-xl: 1.25rem;
    --text-xl--line-height: 1.5;
    --text-2xl: 1.5rem;
    --text-2xl--line-height: 1.33;
    --text-3xl: 1.88rem;
    --text-3xl--line-height: 1.33;
    --text-4xl: 2.25rem;
    --text-4xl--line-height: 1.25;
    --text-5xl: 3rem;
    --text-5xl--line-height: 1.25;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1.2;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --tracking-tighter: -.05em;
    --tracking-tight: -.025em;
    --leading-snug: 1.375;
    --radius-xs: .125rem;
    --radius-sm: .25rem;
    --radius-md: .375rem;
    --radius-lg: .5rem;
    --radius-xl: .75rem;
    --radius-2xl: 1rem;
    --ease-in: cubic-bezier(.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, .2, 1);
    --ease-in-out: cubic-bezier(.4, 0, .2, 1);
    --animate-spin: spin 1s linear infinite;
    --blur-sm: 8px;
    --blur-md: 12px;
    --default-transition-duration: .15s;
    --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    --font-inter: "Inter", "sans-serif";
    --text-lg--letter-spacing: -.01em;
    --text-xl--letter-spacing: -.01em;
    --text-2xl--letter-spacing: -.01em;
    --text-3xl--letter-spacing: -.01em;
    --text-4xl--letter-spacing: -.02em;
    --text-5xl--letter-spacing: -.02em;
    --text-6xl--letter-spacing: -.02em;
  }
}

@layer base {
  *, :after, :before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }

  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: ui-sans-serif, system-ui, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;
    font-feature-settings: initial;
    font-variation-settings: initial;
    -webkit-tap-highlight-color: transparent;
  }

  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }

  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }

  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }

  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }

  b, strong {
    font-weight: bolder;
  }

  code, kbd, samp, pre {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;
    font-feature-settings: initial;
    font-variation-settings: initial;
    font-size: 1em;
  }

  small {
    font-size: 80%;
  }

  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }

  sub {
    bottom: -.25em;
  }

  sup {
    top: -.5em;
  }

  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }

  :-moz-focusring {
    outline: auto;
  }

  progress {
    vertical-align: baseline;
  }

  summary {
    display: list-item;
  }

  ol, ul, menu {
    list-style: none;
  }

  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }

  img, video {
    max-width: 100%;
    height: auto;
  }

  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: #0000;
    opacity: 1;
  }

  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }

  ::file-selector-button {
    margin-inline-end: 4px;
  }

  ::placeholder {
    opacity: 1;
  }

  @supports (not ((-webkit-appearance: -apple-pay-button))) or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: color-mix(in oklab, currentColor 50%, transparent);
    }
  }

  textarea {
    resize: vertical;
  }

  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }

  ::-webkit-datetime-edit {
    display: inline-flex;
  }

  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }

  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }

  :-moz-ui-invalid {
    box-shadow: none;
  }

  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }

  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }

  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}

@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }

  .collapse {
    visibility: collapse;
  }

  .invisible {
    visibility: hidden;
  }

  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }

  .absolute {
    position: absolute;
  }

  .fixed {
    position: fixed;
  }

  .relative {
    position: relative;
  }

  .sticky {
    position: sticky;
  }

  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }

  .inset-x-3 {
    inset-inline: calc(var(--spacing) * 3);
  }

  .-top-2 {
    top: calc(var(--spacing) * -2);
  }

  .top-0 {
    top: calc(var(--spacing) * 0);
  }

  .top-1\/2 {
    top: 50%;
  }

  .top-2 {
    top: calc(var(--spacing) * 2);
  }

  .top-3 {
    top: calc(var(--spacing) * 3);
  }

  .top-4 {
    top: calc(var(--spacing) * 4);
  }

  .top-16 {
    top: calc(var(--spacing) * 16);
  }

  .top-20 {
    top: calc(var(--spacing) * 20);
  }

  .top-full {
    top: 100%;
  }

  .-right-2 {
    right: calc(var(--spacing) * -2);
  }

  .right-0 {
    right: calc(var(--spacing) * 0);
  }

  .right-1 {
    right: calc(var(--spacing) * 1);
  }

  .right-2 {
    right: calc(var(--spacing) * 2);
  }

  .right-3 {
    right: calc(var(--spacing) * 3);
  }

  .right-4 {
    right: calc(var(--spacing) * 4);
  }

  .right-auto {
    right: auto;
  }

  .right-full {
    right: 100%;
  }

  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }

  .bottom-0\.5 {
    bottom: calc(var(--spacing) * .5);
  }

  .bottom-full {
    bottom: 100%;
  }

  .left-0 {
    left: calc(var(--spacing) * 0);
  }

  .left-1\/2 {
    left: 50%;
  }

  .left-auto {
    left: auto;
  }

  .left-full {
    left: 100%;
  }

  .z-10 {
    z-index: 10;
  }

  .z-20 {
    z-index: 20;
  }

  .z-30 {
    z-index: 30;
  }

  .z-40 {
    z-index: 40;
  }

  .z-50 {
    z-index: 50;
  }

  .order-1 {
    order: 1;
  }

  .order-2 {
    order: 2;
  }

  .col-span-6 {
    grid-column: span 6 / span 6;
  }

  .col-span-full {
    grid-column: 1 / -1;
  }

  .-m-1 {
    margin: calc(var(--spacing) * -1);
  }

  .-m-1\.5 {
    margin: calc(var(--spacing) * -1.5);
  }

  .-m-3 {
    margin: calc(var(--spacing) * -3);
  }

  .-m-4 {
    margin: calc(var(--spacing) * -4);
  }

  .m-1 {
    margin: calc(var(--spacing) * 1);
  }

  .m-1\.5 {
    margin: calc(var(--spacing) * 1.5);
  }

  .m-3 {
    margin: calc(var(--spacing) * 3);
  }

  .m-4 {
    margin: calc(var(--spacing) * 4);
  }

  .m-auto {
    margin: auto;
  }

  .-mx-4 {
    margin-inline: calc(var(--spacing) * -4);
  }

  .mx-1 {
    margin-inline: calc(var(--spacing) * 1);
  }

  .mx-2 {
    margin-inline: calc(var(--spacing) * 2);
  }

  .mx-3 {
    margin-inline: calc(var(--spacing) * 3);
  }

  .mx-auto {
    margin-inline: auto;
  }

  .my-1 {
    margin-block: calc(var(--spacing) * 1);
  }

  .my-2 {
    margin-block: calc(var(--spacing) * 2);
  }

  .my-4 {
    margin-block: calc(var(--spacing) * 4);
  }

  .my-8 {
    margin-block: calc(var(--spacing) * 8);
  }

  .-mt-3 {
    margin-top: calc(var(--spacing) * -3);
  }

  .-mt-8 {
    margin-top: calc(var(--spacing) * -8);
  }

  .-mt-px {
    margin-top: -1px;
  }

  .mt-0\.5 {
    margin-top: calc(var(--spacing) * .5);
  }

  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }

  .mt-1\.5 {
    margin-top: calc(var(--spacing) * 1.5);
  }

  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }

  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }

  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }

  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }

  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }

  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }

  .mt-16 {
    margin-top: calc(var(--spacing) * 16);
  }

  .mt-\[3px\] {
    margin-top: 3px;
  }

  .mt-auto {
    margin-top: auto;
  }

  .-mr-48 {
    margin-right: calc(var(--spacing) * -48);
  }

  .mr-0\.5 {
    margin-right: calc(var(--spacing) * .5);
  }

  .mr-1 {
    margin-right: calc(var(--spacing) * 1);
  }

  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }

  .mr-3 {
    margin-right: calc(var(--spacing) * 3);
  }

  .mr-4 {
    margin-right: calc(var(--spacing) * 4);
  }

  .mr-5 {
    margin-right: calc(var(--spacing) * 5);
  }

  .mr-6 {
    margin-right: calc(var(--spacing) * 6);
  }

  .-mb-3 {
    margin-bottom: calc(var(--spacing) * -3);
  }

  .mb-0\.5 {
    margin-bottom: calc(var(--spacing) * .5);
  }

  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }

  .mb-1\.5 {
    margin-bottom: calc(var(--spacing) * 1.5);
  }

  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }

  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }

  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }

  .mb-5 {
    margin-bottom: calc(var(--spacing) * 5);
  }

  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }

  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }

  .mb-10 {
    margin-bottom: calc(var(--spacing) * 10);
  }

  .mb-80 {
    margin-bottom: calc(var(--spacing) * 80);
  }

  .-ml-0\.5 {
    margin-left: calc(var(--spacing) * -.5);
  }

  .-ml-px {
    margin-left: -1px;
  }

  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }

  .ml-1\.5 {
    margin-left: calc(var(--spacing) * 1.5);
  }

  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }

  .ml-3 {
    margin-left: calc(var(--spacing) * 3);
  }

  .ml-4 {
    margin-left: calc(var(--spacing) * 4);
  }

  .ml-auto {
    margin-left: auto;
  }

  .box-content {
    box-sizing: content-box;
  }

  .block {
    display: block;
  }

  .flex {
    display: flex;
  }

  .grid {
    display: grid;
  }

  .hidden {
    display: none;
  }

  .inline {
    display: inline;
  }

  .inline-flex {
    display: inline-flex;
  }

  .table {
    display: table;
  }

  .size-7 {
    width: calc(var(--spacing) * 7);
    height: calc(var(--spacing) * 7);
  }

  .h-0\.5 {
    height: calc(var(--spacing) * .5);
  }

  .h-1 {
    height: calc(var(--spacing) * 1);
  }

  .h-2 {
    height: calc(var(--spacing) * 2);
  }

  .h-2\.5 {
    height: calc(var(--spacing) * 2.5);
  }

  .h-3 {
    height: calc(var(--spacing) * 3);
  }

  .h-3\.5 {
    height: calc(var(--spacing) * 3.5);
  }

  .h-4 {
    height: calc(var(--spacing) * 4);
  }

  .h-5 {
    height: calc(var(--spacing) * 5);
  }

  .h-6 {
    height: calc(var(--spacing) * 6);
  }

  .h-7 {
    height: calc(var(--spacing) * 7);
  }

  .h-8 {
    height: calc(var(--spacing) * 8);
  }

  .h-9 {
    height: calc(var(--spacing) * 9);
  }

  .h-10 {
    height: calc(var(--spacing) * 10);
  }

  .h-12 {
    height: calc(var(--spacing) * 12);
  }

  .h-16 {
    height: calc(var(--spacing) * 16);
  }

  .h-20 {
    height: calc(var(--spacing) * 20);
  }

  .h-96 {
    height: calc(var(--spacing) * 96);
  }

  .h-\[100dvh\] {
    height: 100dvh;
  }

  .h-\[600px\] {
    height: 600px;
  }

  .h-full {
    height: 100%;
  }

  .h-px {
    height: 1px;
  }

  .max-h-0 {
    max-height: calc(var(--spacing) * 0);
  }

  .max-h-96 {
    max-height: calc(var(--spacing) * 96);
  }

  .max-h-\[70vh\] {
    max-height: 70vh;
  }

  .max-h-\[90vh\] {
    max-height: 90vh;
  }

  .max-h-\[calc\(70vh-60px\)\] {
    max-height: calc(70vh - 60px);
  }

  .max-h-\[calc\(100vh-64px\)\] {
    max-height: calc(100vh - 64px);
  }

  .max-h-\[calc\(100vh-200px\)\] {
    max-height: calc(100vh - 200px);
  }

  .max-h-full {
    max-height: 100%;
  }

  .min-h-\[42px\] {
    min-height: 42px;
  }

  .min-h-\[80px\] {
    min-height: 80px;
  }

  .min-h-\[100dvh\] {
    min-height: 100dvh;
  }

  .min-h-\[calc\(100vh-64px\)\] {
    min-height: calc(100vh - 64px);
  }

  .min-h-full {
    min-height: 100%;
  }

  .min-h-screen {
    min-height: 100vh;
  }

  .w-1 {
    width: calc(var(--spacing) * 1);
  }

  .w-1\/2 {
    width: 50%;
  }

  .w-2 {
    width: calc(var(--spacing) * 2);
  }

  .w-2\.5 {
    width: calc(var(--spacing) * 2.5);
  }

  .w-3 {
    width: calc(var(--spacing) * 3);
  }

  .w-4 {
    width: calc(var(--spacing) * 4);
  }

  .w-5 {
    width: calc(var(--spacing) * 5);
  }

  .w-6 {
    width: calc(var(--spacing) * 6);
  }

  .w-7 {
    width: calc(var(--spacing) * 7);
  }

  .w-8 {
    width: calc(var(--spacing) * 8);
  }

  .w-9 {
    width: calc(var(--spacing) * 9);
  }

  .w-10 {
    width: calc(var(--spacing) * 10);
  }

  .w-12 {
    width: calc(var(--spacing) * 12);
  }

  .w-16 {
    width: calc(var(--spacing) * 16);
  }

  .w-20 {
    width: calc(var(--spacing) * 20);
  }

  .w-24 {
    width: calc(var(--spacing) * 24);
  }

  .w-32 {
    width: calc(var(--spacing) * 32);
  }

  .w-40 {
    width: calc(var(--spacing) * 40);
  }

  .w-48 {
    width: calc(var(--spacing) * 48);
  }

  .w-52 {
    width: calc(var(--spacing) * 52);
  }

  .w-72 {
    width: calc(var(--spacing) * 72);
  }

  .w-80 {
    width: calc(var(--spacing) * 80);
  }

  .w-96 {
    width: calc(var(--spacing) * 96);
  }

  .w-\[120px\] {
    width: 120px;
  }

  .w-auto {
    width: auto;
  }

  .w-full {
    width: 100%;
  }

  .w-px {
    width: 1px;
  }

  .max-w-2xl {
    max-width: var(--container-2xl);
  }

  .max-w-3xl {
    max-width: var(--container-3xl);
  }

  .max-w-4xl {
    max-width: var(--container-4xl);
  }

  .max-w-\[96rem\] {
    max-width: 96rem;
  }

  .max-w-lg {
    max-width: var(--container-lg);
  }

  .max-w-md {
    max-width: var(--container-md);
  }

  .max-w-sm {
    max-width: var(--container-sm);
  }

  .max-w-xl {
    max-width: var(--container-xl);
  }

  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }

  .min-w-\[9rem\] {
    min-width: 9rem;
  }

  .min-w-\[11rem\] {
    min-width: 11rem;
  }

  .min-w-\[14rem\] {
    min-width: 14rem;
  }

  .min-w-\[15\.5rem\] {
    min-width: 15.5rem;
  }

  .min-w-\[15rem\] {
    min-width: 15rem;
  }

  .min-w-\[18rem\] {
    min-width: 18rem;
  }

  .min-w-\[20rem\] {
    min-width: 20rem;
  }

  .min-w-\[45px\] {
    min-width: 45px;
  }

  .min-w-\[60px\] {
    min-width: 60px;
  }

  .min-w-\[120px\] {
    min-width: 120px;
  }

  .min-w-fit {
    min-width: fit-content;
  }

  .flex-1 {
    flex: 1;
  }

  .flex-shrink-0 {
    flex-shrink: 0;
  }

  .shrink-0 {
    flex-shrink: 0;
  }

  .grow {
    flex-grow: 1;
  }

  .table-auto {
    table-layout: auto;
  }

  .border-collapse {
    border-collapse: collapse;
  }

  .origin-top-right {
    transform-origin: 100% 0;
  }

  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-x-0 {
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-x-full {
    --tw-translate-x: 100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-translate-y-2 {
    --tw-translate-y: calc(var(--spacing) * -2);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-0 {
    --tw-translate-y: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-4 {
    --tw-translate-y: calc(var(--spacing) * 4);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .scale-95 {
    --tw-scale-x: 95%;
    --tw-scale-y: 95%;
    --tw-scale-z: 95%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .scale-100 {
    --tw-scale-x: 100%;
    --tw-scale-y: 100%;
    --tw-scale-z: 100%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .rotate-180 {
    rotate: 180deg;
  }

  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }

  .animate-spin {
    animation: var(--animate-spin);
  }

  .cursor-default {
    cursor: default;
  }

  .cursor-not-allowed {
    cursor: not-allowed;
  }

  .cursor-pointer {
    cursor: pointer;
  }

  .resize {
    resize: both;
  }

  .resize-y {
    resize: vertical;
  }

  .list-inside {
    list-style-position: inside;
  }

  .list-disc {
    list-style-type: disc;
  }

  .appearance-none {
    appearance: none;
  }

  .grid-flow-col {
    grid-auto-flow: column;
  }

  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .grid-cols-7 {
    grid-template-columns: repeat(7, minmax(0, 1fr));
  }

  .grid-cols-12 {
    grid-template-columns: repeat(12, minmax(0, 1fr));
  }

  .flex-col {
    flex-direction: column;
  }

  .flex-nowrap {
    flex-wrap: nowrap;
  }

  .flex-wrap {
    flex-wrap: wrap;
  }

  .items-center {
    align-items: center;
  }

  .items-end {
    align-items: flex-end;
  }

  .items-start {
    align-items: flex-start;
  }

  .justify-between {
    justify-content: space-between;
  }

  .justify-center {
    justify-content: center;
  }

  .justify-end {
    justify-content: flex-end;
  }

  .justify-start {
    justify-content: flex-start;
  }

  .gap-0 {
    gap: calc(var(--spacing) * 0);
  }

  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }

  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }

  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }

  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }

  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }

  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }

  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }

  .gap-px {
    gap: 1px;
  }

  :where(.space-y-0 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-1 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-2 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-3 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-4 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-5 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 5) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 5) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-6 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-8 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-10 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 10) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 10) * calc(1 - var(--tw-space-y-reverse)));
  }

  .gap-x-2 {
    column-gap: calc(var(--spacing) * 2);
  }

  .gap-x-4 {
    column-gap: calc(var(--spacing) * 4);
  }

  :where(.-space-x-3 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * -3) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * -3) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.-space-x-4 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * -4) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * -4) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.-space-x-7 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * -7) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * -7) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.-space-x-px > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(-1px * var(--tw-space-x-reverse));
    margin-inline-end: calc(-1px * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-1 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-2 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-3 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-4 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-6 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
  }

  .gap-y-2 {
    row-gap: calc(var(--spacing) * 2);
  }

  :where(.divide-y > :not(:last-child)) {
    --tw-divide-y-reverse: 0;
    border-bottom-style: var(--tw-border-style);
    border-top-style: var(--tw-border-style);
    border-top-width: calc(1px * var(--tw-divide-y-reverse));
    border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  }

  :where(.divide-gray-100 > :not(:last-child)) {
    border-color: var(--color-gray-100);
  }

  :where(.divide-gray-200 > :not(:last-child)) {
    border-color: var(--color-gray-200);
  }

  .self-center {
    align-self: center;
  }

  .self-end {
    align-self: flex-end;
  }

  .self-start {
    align-self: flex-start;
  }

  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .overflow-auto {
    overflow: auto;
  }

  .overflow-hidden {
    overflow: hidden;
  }

  .overflow-x-auto {
    overflow-x: auto;
  }

  .overflow-x-hidden {
    overflow-x: hidden;
  }

  .overflow-x-scroll {
    overflow-x: scroll;
  }

  .overflow-y-auto {
    overflow-y: auto;
  }

  .rounded {
    border-radius: .25rem;
  }

  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }

  .rounded-full {
    border-radius: 3.40282e38px;
  }

  .rounded-lg {
    border-radius: var(--radius-lg);
  }

  .rounded-md {
    border-radius: var(--radius-md);
  }

  .rounded-none {
    border-radius: 0;
  }

  .rounded-sm {
    border-radius: var(--radius-sm);
  }

  .rounded-xl {
    border-radius: var(--radius-xl);
  }

  .rounded-xs {
    border-radius: var(--radius-xs);
  }

  .rounded-t-lg {
    border-top-left-radius: var(--radius-lg);
    border-top-right-radius: var(--radius-lg);
  }

  .rounded-t-xl {
    border-top-left-radius: var(--radius-xl);
    border-top-right-radius: var(--radius-xl);
  }

  .rounded-l-lg {
    border-top-left-radius: var(--radius-lg);
    border-bottom-left-radius: var(--radius-lg);
  }

  .rounded-r {
    border-top-right-radius: .25rem;
    border-bottom-right-radius: .25rem;
  }

  .rounded-r-2xl {
    border-top-right-radius: var(--radius-2xl);
    border-bottom-right-radius: var(--radius-2xl);
  }

  .rounded-r-lg {
    border-top-right-radius: var(--radius-lg);
    border-bottom-right-radius: var(--radius-lg);
  }

  .rounded-b-lg {
    border-bottom-right-radius: var(--radius-lg);
    border-bottom-left-radius: var(--radius-lg);
  }

  .rounded-b-xl {
    border-bottom-right-radius: var(--radius-xl);
    border-bottom-left-radius: var(--radius-xl);
  }

  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }

  .border-0 {
    border-style: var(--tw-border-style);
    border-width: 0;
  }

  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }

  .border-4 {
    border-style: var(--tw-border-style);
    border-width: 4px;
  }

  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }

  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }

  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }

  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }

  .border-none {
    --tw-border-style: none;
    border-style: none;
  }

  .border-blue-200 {
    border-color: var(--color-blue-200);
  }

  .border-blue-500 {
    border-color: var(--color-blue-500);
  }

  .border-gray-100 {
    border-color: var(--color-gray-100);
  }

  .border-gray-200 {
    border-color: var(--color-gray-200);
  }

  .border-gray-300 {
    border-color: var(--color-gray-300);
  }

  .border-gray-400 {
    border-color: var(--color-gray-400);
  }

  .border-gray-700\/60 {
    border-color: color-mix(in oklab, var(--color-gray-700) 60%, transparent);
  }

  .border-green-300 {
    border-color: var(--color-green-300);
  }

  .border-green-500 {
    border-color: var(--color-green-500);
  }

  .border-orange-500 {
    border-color: var(--color-orange-500);
  }

  .border-purple-500 {
    border-color: var(--color-purple-500);
  }

  .border-red-200 {
    border-color: var(--color-red-200);
  }

  .border-red-300 {
    border-color: var(--color-red-300);
  }

  .border-red-500 {
    border-color: var(--color-red-500);
  }

  .border-transparent {
    border-color: #0000;
  }

  .border-violet-200 {
    border-color: var(--color-violet-200);
  }

  .border-violet-400 {
    border-color: var(--color-violet-400);
  }

  .border-violet-500 {
    border-color: var(--color-violet-500);
  }

  .border-violet-500\/60 {
    border-color: color-mix(in oklab, var(--color-violet-500) 60%, transparent);
  }

  .border-white {
    border-color: var(--color-white);
  }

  .border-yellow-500 {
    border-color: var(--color-yellow-500);
  }

  .bg-\[\#24292E\] {
    background-color: #24292e;
  }

  .bg-\[\#EA4335\] {
    background-color: #ea4335;
  }

  .bg-amber-100 {
    background-color: var(--color-amber-100);
  }

  .bg-black {
    background-color: var(--color-black);
  }

  .bg-black\/25 {
    background-color: color-mix(in oklab, var(--color-black) 25%, transparent);
  }

  .bg-black\/30 {
    background-color: color-mix(in oklab, var(--color-black) 30%, transparent);
  }

  .bg-black\/40 {
    background-color: color-mix(in oklab, var(--color-black) 40%, transparent);
  }

  .bg-blue-50 {
    background-color: var(--color-blue-50);
  }

  .bg-blue-100 {
    background-color: var(--color-blue-100);
  }

  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }

  .bg-blue-500\/20 {
    background-color: color-mix(in oklab, var(--color-blue-500) 20%, transparent);
  }

  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }

  .bg-gray-50 {
    background-color: var(--color-gray-50);
  }

  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }

  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }

  .bg-gray-400\/20 {
    background-color: color-mix(in oklab, var(--color-gray-400) 20%, transparent);
  }

  .bg-gray-500 {
    background-color: var(--color-gray-500);
  }

  .bg-gray-500\/20 {
    background-color: color-mix(in oklab, var(--color-gray-500) 20%, transparent);
  }

  .bg-gray-600 {
    background-color: var(--color-gray-600);
  }

  .bg-gray-700 {
    background-color: var(--color-gray-700);
  }

  .bg-gray-800 {
    background-color: var(--color-gray-800);
  }

  .bg-gray-900 {
    background-color: var(--color-gray-900);
  }

  .bg-gray-900\/30 {
    background-color: color-mix(in oklab, var(--color-gray-900) 30%, transparent);
  }

  .bg-gray-900\/60 {
    background-color: color-mix(in oklab, var(--color-gray-900) 60%, transparent);
  }

  .bg-green-50 {
    background-color: var(--color-green-50);
  }

  .bg-green-100 {
    background-color: var(--color-green-100);
  }

  .bg-green-400 {
    background-color: var(--color-green-400);
  }

  .bg-green-500 {
    background-color: var(--color-green-500);
  }

  .bg-green-500\/20 {
    background-color: color-mix(in oklab, var(--color-green-500) 20%, transparent);
  }

  .bg-green-600 {
    background-color: var(--color-green-600);
  }

  .bg-indigo-500\/20 {
    background-color: color-mix(in oklab, var(--color-indigo-500) 20%, transparent);
  }

  .bg-orange-500 {
    background-color: var(--color-orange-500);
  }

  .bg-pink-500\/20 {
    background-color: color-mix(in oklab, var(--color-pink-500) 20%, transparent);
  }

  .bg-purple-100 {
    background-color: var(--color-purple-100);
  }

  .bg-purple-500 {
    background-color: var(--color-purple-500);
  }

  .bg-purple-500\/20 {
    background-color: color-mix(in oklab, var(--color-purple-500) 20%, transparent);
  }

  .bg-red-50 {
    background-color: var(--color-red-50);
  }

  .bg-red-100 {
    background-color: var(--color-red-100);
  }

  .bg-red-500 {
    background-color: var(--color-red-500);
  }

  .bg-red-500\/20 {
    background-color: color-mix(in oklab, var(--color-red-500) 20%, transparent);
  }

  .bg-red-600 {
    background-color: var(--color-red-600);
  }

  .bg-sky-500 {
    background-color: var(--color-sky-500);
  }

  .bg-sky-500\/20 {
    background-color: color-mix(in oklab, var(--color-sky-500) 20%, transparent);
  }

  .bg-transparent {
    background-color: #0000;
  }

  .bg-violet-50 {
    background-color: var(--color-violet-50);
  }

  .bg-violet-100 {
    background-color: var(--color-violet-100);
  }

  .bg-violet-500 {
    background-color: var(--color-violet-500);
  }

  .bg-violet-500\/20 {
    background-color: color-mix(in oklab, var(--color-violet-500) 20%, transparent);
  }

  .bg-violet-600 {
    background-color: var(--color-violet-600);
  }

  .bg-white {
    background-color: var(--color-white);
  }

  .bg-yellow-100 {
    background-color: var(--color-yellow-100);
  }

  .bg-yellow-500 {
    background-color: var(--color-yellow-500);
  }

  .bg-yellow-500\/20 {
    background-color: color-mix(in oklab, var(--color-yellow-500) 20%, transparent);
  }

  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-t {
    --tw-gradient-position: to top in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-linear-to-b {
    --tw-gradient-position: to bottom in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-linear-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-linear-to-t {
    --tw-gradient-position: to top in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .from-amber-600 {
    --tw-gradient-from: var(--color-amber-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-blue-600 {
    --tw-gradient-from: var(--color-blue-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-cyan-600 {
    --tw-gradient-from: var(--color-cyan-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-gray-100 {
    --tw-gradient-from: var(--color-gray-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-gray-200 {
    --tw-gradient-from: var(--color-gray-200);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-green-600 {
    --tw-gradient-from: var(--color-green-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-indigo-600 {
    --tw-gradient-from: var(--color-indigo-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-purple-600 {
    --tw-gradient-from: var(--color-purple-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-violet-500 {
    --tw-gradient-from: var(--color-violet-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-violet-500\/\[0\.12\] {
    --tw-gradient-from: color-mix(in oklab, var(--color-violet-500) 12%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-white {
    --tw-gradient-from: var(--color-white);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-amber-500 {
    --tw-gradient-to: var(--color-amber-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-blue-500 {
    --tw-gradient-to: var(--color-blue-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-cyan-500 {
    --tw-gradient-to: var(--color-cyan-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-gray-100 {
    --tw-gradient-to: var(--color-gray-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-gray-200 {
    --tw-gradient-to: var(--color-gray-200);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-green-500 {
    --tw-gradient-to: var(--color-green-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-indigo-500 {
    --tw-gradient-to: var(--color-indigo-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-purple-500 {
    --tw-gradient-to: var(--color-purple-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-transparent {
    --tw-gradient-to: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-violet-500\/\[0\.04\] {
    --tw-gradient-to: color-mix(in oklab, var(--color-violet-500) 4%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-violet-600 {
    --tw-gradient-to: var(--color-violet-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-white {
    --tw-gradient-to: var(--color-white);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .fill-current {
    fill: currentColor;
  }

  .fill-gray-100 {
    fill: var(--color-gray-100);
  }

  .fill-gray-400 {
    fill: var(--color-gray-400);
  }

  .fill-violet-500 {
    fill: var(--color-violet-500);
  }

  .stroke-current {
    stroke: currentColor;
  }

  .object-cover {
    object-fit: cover;
  }

  .object-center {
    object-position: center;
  }

  .p-0 {
    padding: calc(var(--spacing) * 0);
  }

  .p-0\.5 {
    padding: calc(var(--spacing) * .5);
  }

  .p-1 {
    padding: calc(var(--spacing) * 1);
  }

  .p-1\.5 {
    padding: calc(var(--spacing) * 1.5);
  }

  .p-2 {
    padding: calc(var(--spacing) * 2);
  }

  .p-3 {
    padding: calc(var(--spacing) * 3);
  }

  .p-4 {
    padding: calc(var(--spacing) * 4);
  }

  .p-5 {
    padding: calc(var(--spacing) * 5);
  }

  .p-6 {
    padding: calc(var(--spacing) * 6);
  }

  .p-8 {
    padding: calc(var(--spacing) * 8);
  }

  .px-0\.5 {
    padding-inline: calc(var(--spacing) * .5);
  }

  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }

  .px-1\.5 {
    padding-inline: calc(var(--spacing) * 1.5);
  }

  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }

  .px-2\.5 {
    padding-inline: calc(var(--spacing) * 2.5);
  }

  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }

  .px-3\.5 {
    padding-inline: calc(var(--spacing) * 3.5);
  }

  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }

  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }

  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }

  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }

  .py-0\.5 {
    padding-block: calc(var(--spacing) * .5);
  }

  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }

  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }

  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }

  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }

  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }

  .py-5 {
    padding-block: calc(var(--spacing) * 5);
  }

  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }

  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }

  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }

  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }

  .pt-0\.5 {
    padding-top: calc(var(--spacing) * .5);
  }

  .pt-1 {
    padding-top: calc(var(--spacing) * 1);
  }

  .pt-1\.5 {
    padding-top: calc(var(--spacing) * 1.5);
  }

  .pt-2 {
    padding-top: calc(var(--spacing) * 2);
  }

  .pt-3 {
    padding-top: calc(var(--spacing) * 3);
  }

  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }

  .pt-5 {
    padding-top: calc(var(--spacing) * 5);
  }

  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }

  .pt-8 {
    padding-top: calc(var(--spacing) * 8);
  }

  .pt-12 {
    padding-top: calc(var(--spacing) * 12);
  }

  .pr-0 {
    padding-right: calc(var(--spacing) * 0);
  }

  .pr-3 {
    padding-right: calc(var(--spacing) * 3);
  }

  .pr-4 {
    padding-right: calc(var(--spacing) * 4);
  }

  .pr-8 {
    padding-right: calc(var(--spacing) * 8);
  }

  .pb-1 {
    padding-bottom: calc(var(--spacing) * 1);
  }

  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }

  .pb-3 {
    padding-bottom: calc(var(--spacing) * 3);
  }

  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }

  .pb-6 {
    padding-bottom: calc(var(--spacing) * 6);
  }

  .pb-8 {
    padding-bottom: calc(var(--spacing) * 8);
  }

  .pl-0 {
    padding-left: calc(var(--spacing) * 0);
  }

  .pl-3 {
    padding-left: calc(var(--spacing) * 3);
  }

  .pl-4 {
    padding-left: calc(var(--spacing) * 4);
  }

  .pl-7 {
    padding-left: calc(var(--spacing) * 7);
  }

  .pl-8 {
    padding-left: calc(var(--spacing) * 8);
  }

  .pl-9 {
    padding-left: calc(var(--spacing) * 9);
  }

  .pl-10 {
    padding-left: calc(var(--spacing) * 10);
  }

  .pl-12 {
    padding-left: calc(var(--spacing) * 12);
  }

  .text-center {
    text-align: center;
  }

  .text-left {
    text-align: left;
  }

  .text-right {
    text-align: right;
  }

  .align-middle {
    vertical-align: middle;
  }

  .align-top {
    vertical-align: top;
  }

  .font-inter {
    font-family: var(--font-inter);
  }

  .font-mono {
    font-family: var(--font-mono);
  }

  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
    letter-spacing: var(--tw-tracking, var(--text-2xl--letter-spacing));
  }

  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
    letter-spacing: var(--tw-tracking, var(--text-3xl--letter-spacing));
  }

  .text-6xl {
    font-size: var(--text-6xl);
    line-height: var(--tw-leading, var(--text-6xl--line-height));
    letter-spacing: var(--tw-tracking, var(--text-6xl--letter-spacing));
  }

  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
    letter-spacing: var(--tw-tracking, var(--text-lg--letter-spacing));
  }

  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    letter-spacing: var(--tw-tracking, var(--text-xl--letter-spacing));
  }

  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .text-\[0\.8rem\] {
    font-size: .8rem;
  }

  .text-\[10px\] {
    font-size: 10px;
  }

  .leading-5 {
    --tw-leading: calc(var(--spacing) * 5);
    line-height: calc(var(--spacing) * 5);
  }

  .leading-snug {
    --tw-leading: var(--leading-snug);
    line-height: var(--leading-snug);
  }

  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }

  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }

  .break-all {
    word-break: break-all;
  }

  .whitespace-nowrap {
    white-space: nowrap;
  }

  .text-amber-500 {
    color: var(--color-amber-500);
  }

  .text-amber-600 {
    color: var(--color-amber-600);
  }

  .text-blue-500 {
    color: var(--color-blue-500);
  }

  .text-blue-600 {
    color: var(--color-blue-600);
  }

  .text-blue-700 {
    color: var(--color-blue-700);
  }

  .text-blue-800 {
    color: var(--color-blue-800);
  }

  .text-cyan-500 {
    color: var(--color-cyan-500);
  }

  .text-gray-50 {
    color: var(--color-gray-50);
  }

  .text-gray-100 {
    color: var(--color-gray-100);
  }

  .text-gray-200 {
    color: var(--color-gray-200);
  }

  .text-gray-300 {
    color: var(--color-gray-300);
  }

  .text-gray-400 {
    color: var(--color-gray-400);
  }

  .text-gray-500 {
    color: var(--color-gray-500);
  }

  .text-gray-500\/80 {
    color: color-mix(in oklab, var(--color-gray-500) 80%, transparent);
  }

  .text-gray-500\/90 {
    color: color-mix(in oklab, var(--color-gray-500) 90%, transparent);
  }

  .text-gray-600 {
    color: var(--color-gray-600);
  }

  .text-gray-700 {
    color: var(--color-gray-700);
  }

  .text-gray-800 {
    color: var(--color-gray-800);
  }

  .text-gray-900 {
    color: var(--color-gray-900);
  }

  .text-green-500 {
    color: var(--color-green-500);
  }

  .text-green-500\/20 {
    color: color-mix(in oklab, var(--color-green-500) 20%, transparent);
  }

  .text-green-600 {
    color: var(--color-green-600);
  }

  .text-green-700 {
    color: var(--color-green-700);
  }

  .text-indigo-500 {
    color: var(--color-indigo-500);
  }

  .text-indigo-700 {
    color: var(--color-indigo-700);
  }

  .text-orange-600 {
    color: var(--color-orange-600);
  }

  .text-pink-700 {
    color: var(--color-pink-700);
  }

  .text-purple-500 {
    color: var(--color-purple-500);
  }

  .text-purple-600 {
    color: var(--color-purple-600);
  }

  .text-purple-700 {
    color: var(--color-purple-700);
  }

  .text-red-500 {
    color: var(--color-red-500);
  }

  .text-red-600 {
    color: var(--color-red-600);
  }

  .text-red-700 {
    color: var(--color-red-700);
  }

  .text-red-800 {
    color: var(--color-red-800);
  }

  .text-sky-500 {
    color: var(--color-sky-500);
  }

  .text-sky-700 {
    color: var(--color-sky-700);
  }

  .text-violet-100 {
    color: var(--color-violet-100);
  }

  .text-violet-200 {
    color: var(--color-violet-200);
  }

  .text-violet-300 {
    color: var(--color-violet-300);
  }

  .text-violet-500 {
    color: var(--color-violet-500);
  }

  .text-violet-600 {
    color: var(--color-violet-600);
  }

  .text-violet-700 {
    color: var(--color-violet-700);
  }

  .text-violet-900 {
    color: var(--color-violet-900);
  }

  .text-white {
    color: var(--color-white);
  }

  .text-yellow-500 {
    color: var(--color-yellow-500);
  }

  .text-yellow-600 {
    color: var(--color-yellow-600);
  }

  .text-yellow-700 {
    color: var(--color-yellow-700);
  }

  .uppercase {
    text-transform: uppercase;
  }

  .italic {
    font-style: italic;
  }

  .tabular-nums {
    --tw-numeric-spacing: tabular-nums;
    font-variant-numeric: var(--tw-ordinal, ) var(--tw-slashed-zero, ) var(--tw-numeric-figure, ) var(--tw-numeric-spacing, ) var(--tw-numeric-fraction, );
  }

  .line-through {
    text-decoration-line: line-through;
  }

  .underline {
    text-decoration-line: underline;
  }

  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  .placeholder-gray-400::placeholder {
    color: var(--color-gray-400);
  }

  .opacity-0 {
    opacity: 0;
  }

  .opacity-10 {
    opacity: .1;
  }

  .opacity-50 {
    opacity: .5;
  }

  .opacity-60 {
    opacity: .6;
  }

  .opacity-80 {
    opacity: .8;
  }

  .opacity-100 {
    opacity: 1;
  }

  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-2xl {
    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, #00000040);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-none {
    --tw-shadow: 0 0 #0000;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-sm {
    --tw-shadow: 0 1px 1px 0 var(--tw-shadow-color, #0000000d), 0 1px 2px 0 var(--tw-shadow-color, #00000005);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a), 0 8px 10px -6px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-xs {
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, #0000000d);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-2 {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-black\/\[0\.08\] {
    --tw-shadow-color: color-mix(in oklab, var(--color-black) 8%, transparent);
  }

  .shadow-violet-500\/20 {
    --tw-shadow-color: color-mix(in oklab, var(--color-violet-500) 20%, transparent);
  }

  .ring-violet-500 {
    --tw-ring-color: var(--color-violet-500);
  }

  .ring-offset-1 {
    --tw-ring-offset-width: 1px;
    --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }

  .outline-hidden {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .outline-hidden {
      outline: 2px solid #0000;
      outline-offset: 2px;
    }
  }

  .blur-sm {
    --tw-blur: blur(var(--blur-sm));
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .filter {
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .backdrop-blur-sm {
    --tw-backdrop-blur: blur(var(--blur-sm));
    -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .duration-100 {
    --tw-duration: .1s;
    transition-duration: .1s;
  }

  .duration-200 {
    --tw-duration: .2s;
    transition-duration: .2s;
  }

  .duration-300 {
    --tw-duration: .3s;
    transition-duration: .3s;
  }

  .duration-1000 {
    --tw-duration: 1s;
    transition-duration: 1s;
  }

  .ease-in {
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
  }

  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }

  .ease-linear {
    --tw-ease: linear;
    transition-timing-function: linear;
  }

  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }

  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (hover: hover) {
    .group-hover\:visible:is(:where(.group):hover *) {
      visibility: visible;
    }
  }

  @media (hover: hover) {
    .group-hover\:text-gray-500:is(:where(.group):hover *) {
      color: var(--color-gray-500);
    }
  }

  @media (hover: hover) {
    .group-hover\:text-gray-800:is(:where(.group):hover *) {
      color: var(--color-gray-800);
    }
  }

  @media (hover: hover) {
    .group-hover\:opacity-100:is(:where(.group):hover *) {
      opacity: 1;
    }
  }

  .peer-checked\:border-violet-400:is(:where(.peer):checked ~ *) {
    border-color: var(--color-violet-400);
  }

  .before\:absolute:before {
    content: var(--tw-content);
    position: absolute;
  }

  .before\:inset-0:before {
    content: var(--tw-content);
    inset: calc(var(--spacing) * 0);
  }

  .before\:-z-10:before {
    content: var(--tw-content);
    z-index: calc(10 * -1);
  }

  .before\:bg-white:before {
    content: var(--tw-content);
    background-color: var(--color-white);
  }

  .before\:backdrop-blur-md:before {
    content: var(--tw-content);
    --tw-backdrop-blur: blur(var(--blur-md));
    -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .after\:absolute:after {
    content: var(--tw-content);
    position: absolute;
  }

  .after\:inset-x-0:after {
    content: var(--tw-content);
    inset-inline: calc(var(--spacing) * 0);
  }

  .after\:top-full:after {
    content: var(--tw-content);
    top: 100%;
  }

  .after\:-z-10:after {
    content: var(--tw-content);
    z-index: calc(10 * -1);
  }

  .after\:block:after {
    content: var(--tw-content);
    display: block;
  }

  .after\:h-px:after {
    content: var(--tw-content);
    height: 1px;
  }

  .after\:flex-1:after {
    content: var(--tw-content);
    flex: 1;
  }

  .after\:bg-gray-200:after {
    content: var(--tw-content);
    background-color: var(--color-gray-200);
  }

  .after\:px-2:after {
    content: var(--tw-content);
    padding-inline: calc(var(--spacing) * 2);
  }

  .after\:text-sm:after {
    content: var(--tw-content);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .after\:text-gray-400:after {
    content: var(--tw-content);
    color: var(--color-gray-400);
  }

  .after\:content-\[\'\/\'\]:after {
    content: var(--tw-content);
    --tw-content: "/";
    content: var(--tw-content);
  }

  .after\:content-\[\'·\'\]:after {
    content: var(--tw-content);
    --tw-content: "·";
    content: var(--tw-content);
  }

  .first\:ml-0:first-child {
    margin-left: calc(var(--spacing) * 0);
  }

  .first\:rounded-l-lg:first-child {
    border-top-left-radius: var(--radius-lg);
    border-bottom-left-radius: var(--radius-lg);
  }

  .first\:pl-4:first-child {
    padding-left: calc(var(--spacing) * 4);
  }

  .first\:pl-5:first-child {
    padding-left: calc(var(--spacing) * 5);
  }

  .last\:mr-0:last-child {
    margin-right: calc(var(--spacing) * 0);
  }

  .last\:mb-0:last-child {
    margin-bottom: calc(var(--spacing) * 0);
  }

  .last\:rounded-r-lg:last-child {
    border-top-right-radius: var(--radius-lg);
    border-bottom-right-radius: var(--radius-lg);
  }

  .last\:border-0:last-child {
    border-style: var(--tw-border-style);
    border-width: 0;
  }

  .last\:pr-4:last-child {
    padding-right: calc(var(--spacing) * 4);
  }

  .last\:pr-5:last-child {
    padding-right: calc(var(--spacing) * 5);
  }

  .last\:after\:hidden:last-child:after {
    content: var(--tw-content);
    display: none;
  }

  .last\:after\:content-\[\'\'\]:last-child:after {
    content: var(--tw-content);
    --tw-content: "";
    content: var(--tw-content);
  }

  .focus-within\:relative:focus-within {
    position: relative;
  }

  .focus-within\:z-20:focus-within {
    z-index: 20;
  }

  @media (hover: hover) {
    .hover\:scale-125:hover {
      --tw-scale-x: 125%;
      --tw-scale-y: 125%;
      --tw-scale-z: 125%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  @media (hover: hover) {
    .hover\:border-blue-600:hover {
      border-color: var(--color-blue-600);
    }
  }

  @media (hover: hover) {
    .hover\:border-gray-300:hover {
      border-color: var(--color-gray-300);
    }
  }

  @media (hover: hover) {
    .hover\:border-green-600:hover {
      border-color: var(--color-green-600);
    }
  }

  @media (hover: hover) {
    .hover\:border-orange-600:hover {
      border-color: var(--color-orange-600);
    }
  }

  @media (hover: hover) {
    .hover\:border-purple-600:hover {
      border-color: var(--color-purple-600);
    }
  }

  @media (hover: hover) {
    .hover\:border-red-600:hover {
      border-color: var(--color-red-600);
    }
  }

  @media (hover: hover) {
    .hover\:border-violet-400:hover {
      border-color: var(--color-violet-400);
    }
  }

  @media (hover: hover) {
    .hover\:border-yellow-600:hover {
      border-color: var(--color-yellow-600);
    }
  }

  @media (hover: hover) {
    .hover\:bg-blue-100:hover {
      background-color: var(--color-blue-100);
    }
  }

  @media (hover: hover) {
    .hover\:bg-blue-600:hover {
      background-color: var(--color-blue-600);
    }
  }

  @media (hover: hover) {
    .hover\:bg-blue-700:hover {
      background-color: var(--color-blue-700);
    }
  }

  @media (hover: hover) {
    .hover\:bg-gray-50:hover {
      background-color: var(--color-gray-50);
    }
  }

  @media (hover: hover) {
    .hover\:bg-gray-100:hover {
      background-color: var(--color-gray-100);
    }
  }

  @media (hover: hover) {
    .hover\:bg-gray-200:hover {
      background-color: var(--color-gray-200);
    }
  }

  @media (hover: hover) {
    .hover\:bg-gray-300:hover {
      background-color: var(--color-gray-300);
    }
  }

  @media (hover: hover) {
    .hover\:bg-gray-600:hover {
      background-color: var(--color-gray-600);
    }
  }

  @media (hover: hover) {
    .hover\:bg-gray-700:hover {
      background-color: var(--color-gray-700);
    }
  }

  @media (hover: hover) {
    .hover\:bg-gray-800:hover {
      background-color: var(--color-gray-800);
    }
  }

  @media (hover: hover) {
    .hover\:bg-green-600:hover {
      background-color: var(--color-green-600);
    }
  }

  @media (hover: hover) {
    .hover\:bg-green-700:hover {
      background-color: var(--color-green-700);
    }
  }

  @media (hover: hover) {
    .hover\:bg-orange-600:hover {
      background-color: var(--color-orange-600);
    }
  }

  @media (hover: hover) {
    .hover\:bg-purple-200:hover {
      background-color: var(--color-purple-200);
    }
  }

  @media (hover: hover) {
    .hover\:bg-purple-600:hover {
      background-color: var(--color-purple-600);
    }
  }

  @media (hover: hover) {
    .hover\:bg-red-600:hover {
      background-color: var(--color-red-600);
    }
  }

  @media (hover: hover) {
    .hover\:bg-violet-100:hover {
      background-color: var(--color-violet-100);
    }
  }

  @media (hover: hover) {
    .hover\:bg-violet-500:hover {
      background-color: var(--color-violet-500);
    }
  }

  @media (hover: hover) {
    .hover\:bg-violet-600:hover {
      background-color: var(--color-violet-600);
    }
  }

  @media (hover: hover) {
    .hover\:bg-violet-700:hover {
      background-color: var(--color-violet-700);
    }
  }

  @media (hover: hover) {
    .hover\:bg-white:hover {
      background-color: var(--color-white);
    }
  }

  @media (hover: hover) {
    .hover\:bg-yellow-600:hover {
      background-color: var(--color-yellow-600);
    }
  }

  @media (hover: hover) {
    .hover\:text-gray-400:hover {
      color: var(--color-gray-400);
    }
  }

  @media (hover: hover) {
    .hover\:text-gray-500:hover {
      color: var(--color-gray-500);
    }
  }

  @media (hover: hover) {
    .hover\:text-gray-600:hover {
      color: var(--color-gray-600);
    }
  }

  @media (hover: hover) {
    .hover\:text-gray-700:hover {
      color: var(--color-gray-700);
    }
  }

  @media (hover: hover) {
    .hover\:text-gray-800:hover {
      color: var(--color-gray-800);
    }
  }

  @media (hover: hover) {
    .hover\:text-gray-900:hover {
      color: var(--color-gray-900);
    }
  }

  @media (hover: hover) {
    .hover\:text-violet-500:hover {
      color: var(--color-violet-500);
    }
  }

  @media (hover: hover) {
    .hover\:text-violet-600:hover {
      color: var(--color-violet-600);
    }
  }

  @media (hover: hover) {
    .hover\:text-white:hover {
      color: var(--color-white);
    }
  }

  @media (hover: hover) {
    .hover\:text-yellow-600:hover {
      color: var(--color-yellow-600);
    }
  }

  @media (hover: hover) {
    .hover\:no-underline:hover {
      text-decoration-line: none;
    }
  }

  @media (hover: hover) {
    .hover\:opacity-70:hover {
      opacity: .7;
    }
  }

  @media (hover: hover) {
    .hover\:opacity-100:hover {
      opacity: 1;
    }
  }

  .focus\:border-gray-300:focus {
    border-color: var(--color-gray-300);
  }

  .focus\:bg-violet-500:focus {
    background-color: var(--color-violet-500);
  }

  .focus\:text-white:focus {
    color: var(--color-white);
  }

  .focus\:ring-transparent:focus {
    --tw-ring-color: transparent;
  }

  .focus\:outline-hidden:focus {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .focus\:outline-hidden:focus {
      outline: 2px solid #0000;
      outline-offset: 2px;
    }
  }

  .disabled\:pointer-events-none:disabled {
    pointer-events: none;
  }

  .disabled\:cursor-not-allowed:disabled {
    cursor: not-allowed;
  }

  .disabled\:border-gray-200:disabled {
    border-color: var(--color-gray-200);
  }

  .disabled\:bg-gray-100:disabled {
    background-color: var(--color-gray-100);
  }

  .disabled\:bg-white:disabled {
    background-color: var(--color-white);
  }

  .disabled\:text-gray-300:disabled {
    color: var(--color-gray-300);
  }

  .disabled\:text-gray-400:disabled {
    color: var(--color-gray-400);
  }

  .disabled\:opacity-50:disabled {
    opacity: .5;
  }

  .aria-selected\:bg-violet-500\/50[aria-selected="true"] {
    background-color: color-mix(in oklab, var(--color-violet-500) 50%, transparent);
  }

  .aria-selected\:bg-violet-500\/70[aria-selected="true"] {
    background-color: color-mix(in oklab, var(--color-violet-500) 70%, transparent);
  }

  .aria-selected\:text-gray-400[aria-selected="true"] {
    color: var(--color-gray-400);
  }

  .aria-selected\:text-white[aria-selected="true"] {
    color: var(--color-white);
  }

  .aria-selected\:opacity-100[aria-selected="true"] {
    opacity: 1;
  }

  @media (width < 480px) {
    .max-xs\:sr-only {
      position: absolute;
      width: 1px;
      height: 1px;
      padding: 0;
      margin: -1px;
      overflow: hidden;
      clip: rect(0, 0, 0, 0);
      white-space: nowrap;
      border-width: 0;
    }
  }

  @media (width < 64rem) {
    .max-lg\:shadow-sm {
      --tw-shadow: 0 1px 1px 0 var(--tw-shadow-color, #0000000d), 0 1px 2px 0 var(--tw-shadow-color, #00000005);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (width < 64rem) {
    .max-lg\:before\:bg-white\/90:before {
      content: var(--tw-content);
      background-color: color-mix(in oklab, var(--color-white) 90%, transparent);
    }
  }

  @media (width < 40rem) {
    .max-sm\:max-h-\[128px\] {
      max-height: 128px;
    }
  }

  @media (width >= 480px) {
    .xs\:hidden {
      display: none;
    }
  }

  @media (width >= 40rem) {
    .sm\:order-1 {
      order: 1;
    }
  }

  @media (width >= 40rem) {
    .sm\:order-none {
      order: 0;
    }
  }

  @media (width >= 40rem) {
    .sm\:col-span-2 {
      grid-column: span 2 / span 2;
    }
  }

  @media (width >= 40rem) {
    .sm\:col-span-3 {
      grid-column: span 3 / span 3;
    }
  }

  @media (width >= 40rem) {
    .sm\:col-span-4 {
      grid-column: span 4 / span 4;
    }
  }

  @media (width >= 40rem) {
    .sm\:col-span-6 {
      grid-column: span 6 / span 6;
    }
  }

  @media (width >= 40rem) {
    .sm\:-mx-6 {
      margin-inline: calc(var(--spacing) * -6);
    }
  }

  @media (width >= 40rem) {
    .sm\:mr-0 {
      margin-right: calc(var(--spacing) * 0);
    }
  }

  @media (width >= 40rem) {
    .sm\:mr-3 {
      margin-right: calc(var(--spacing) * 3);
    }
  }

  @media (width >= 40rem) {
    .sm\:mb-0 {
      margin-bottom: calc(var(--spacing) * 0);
    }
  }

  @media (width >= 40rem) {
    .sm\:block {
      display: block;
    }
  }

  @media (width >= 40rem) {
    .sm\:flex {
      display: flex;
    }
  }

  @media (width >= 40rem) {
    .sm\:inline {
      display: inline;
    }
  }

  @media (width >= 40rem) {
    .sm\:h-28 {
      height: calc(var(--spacing) * 28);
    }
  }

  @media (width >= 40rem) {
    .sm\:auto-cols-max {
      grid-auto-columns: max-content;
    }
  }

  @media (width >= 40rem) {
    .sm\:flex-row {
      flex-direction: row;
    }
  }

  @media (width >= 40rem) {
    .sm\:items-center {
      align-items: center;
    }
  }

  @media (width >= 40rem) {
    .sm\:justify-between {
      justify-content: space-between;
    }
  }

  @media (width >= 40rem) {
    .sm\:justify-center {
      justify-content: center;
    }
  }

  @media (width >= 40rem) {
    .sm\:justify-end {
      justify-content: flex-end;
    }
  }

  @media (width >= 40rem) {
    :where(.sm\:space-y-0 > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  @media (width >= 40rem) {
    :where(.sm\:space-x-4 > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
    }
  }

  @media (width >= 40rem) {
    :where(.sm\:space-x-6 > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
    }
  }

  @media (width >= 40rem) {
    .sm\:p-1\.5 {
      padding: calc(var(--spacing) * 1.5);
    }
  }

  @media (width >= 40rem) {
    .sm\:px-2 {
      padding-inline: calc(var(--spacing) * 2);
    }
  }

  @media (width >= 40rem) {
    .sm\:px-6 {
      padding-inline: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 40rem) {
    .sm\:py-0\.5 {
      padding-block: calc(var(--spacing) * .5);
    }
  }

  @media (width >= 40rem) {
    .sm\:text-center {
      text-align: center;
    }
  }

  @media (width >= 40rem) {
    .sm\:text-left {
      text-align: left;
    }
  }

  @media (width >= 40rem) {
    .sm\:text-sm {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }

  @media (width >= 40rem) {
    .sm\:first\:pl-6:first-child {
      padding-left: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 40rem) {
    .sm\:last\:pr-6:last-child {
      padding-right: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 48rem) {
    .md\:right-0 {
      right: calc(var(--spacing) * 0);
    }
  }

  @media (width >= 48rem) {
    .md\:right-auto {
      right: auto;
    }
  }

  @media (width >= 48rem) {
    .md\:left-0 {
      left: calc(var(--spacing) * 0);
    }
  }

  @media (width >= 48rem) {
    .md\:left-auto {
      left: auto;
    }
  }

  @media (width >= 48rem) {
    .md\:order-1 {
      order: 1;
    }
  }

  @media (width >= 48rem) {
    .md\:col-span-6 {
      grid-column: span 6 / span 6;
    }
  }

  @media (width >= 48rem) {
    .md\:mt-0 {
      margin-top: calc(var(--spacing) * 0);
    }
  }

  @media (width >= 48rem) {
    .md\:mr-0 {
      margin-right: calc(var(--spacing) * 0);
    }
  }

  @media (width >= 48rem) {
    .md\:mb-0 {
      margin-bottom: calc(var(--spacing) * 0);
    }
  }

  @media (width >= 48rem) {
    .md\:mb-0\.5 {
      margin-bottom: calc(var(--spacing) * .5);
    }
  }

  @media (width >= 48rem) {
    .md\:ml-8 {
      margin-left: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 48rem) {
    .md\:block {
      display: block;
    }
  }

  @media (width >= 48rem) {
    .md\:flex {
      display: flex;
    }
  }

  @media (width >= 48rem) {
    .md\:hidden {
      display: none;
    }
  }

  @media (width >= 48rem) {
    .md\:inline {
      display: inline;
    }
  }

  @media (width >= 48rem) {
    .md\:w-1\/2 {
      width: 50%;
    }
  }

  @media (width >= 48rem) {
    .md\:w-1\/3 {
      width: 33.3333%;
    }
  }

  @media (width >= 48rem) {
    .md\:w-full {
      width: 100%;
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:flex-col {
      flex-direction: column;
    }
  }

  @media (width >= 48rem) {
    .md\:items-center {
      align-items: center;
    }
  }

  @media (width >= 48rem) {
    .md\:justify-between {
      justify-content: space-between;
    }
  }

  @media (width >= 48rem) {
    :where(.md\:space-y-0 > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  @media (width >= 48rem) {
    :where(.md\:space-y-3 > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  @media (width >= 48rem) {
    :where(.md\:space-y-6 > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  @media (width >= 48rem) {
    :where(.md\:space-y-10 > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 10) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 10) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  @media (width >= 48rem) {
    .md\:gap-x-16 {
      column-gap: calc(var(--spacing) * 16);
    }
  }

  @media (width >= 48rem) {
    :where(.md\:space-x-0 > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 0) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-x-reverse)));
    }
  }

  @media (width >= 48rem) {
    :where(.md\:space-x-4 > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
    }
  }

  @media (width >= 48rem) {
    .md\:overflow-auto {
      overflow: auto;
    }
  }

  @media (width >= 48rem) {
    .md\:border-r {
      border-right-style: var(--tw-border-style);
      border-right-width: 1px;
    }
  }

  @media (width >= 48rem) {
    .md\:border-b-0 {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 0;
    }
  }

  @media (width >= 48rem) {
    .md\:py-0 {
      padding-block: calc(var(--spacing) * 0);
    }
  }

  @media (width >= 48rem) {
    .md\:py-8 {
      padding-block: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 48rem) {
    .md\:pl-0 {
      padding-left: calc(var(--spacing) * 0);
    }
  }

  @media (width >= 48rem) {
    .md\:text-3xl {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
      letter-spacing: var(--tw-tracking, var(--text-3xl--letter-spacing));
    }
  }

  @media (width >= 64rem) {
    .lg\:relative {
      position: relative;
    }
  }

  @media (width >= 64rem) {
    .lg\:sticky {
      position: sticky;
    }
  }

  @media (width >= 64rem) {
    .lg\:top-16 {
      top: calc(var(--spacing) * 16);
    }
  }

  @media (width >= 64rem) {
    .lg\:-mx-8 {
      margin-inline: calc(var(--spacing) * -8);
    }
  }

  @media (width >= 64rem) {
    .lg\:block {
      display: block;
    }
  }

  @media (width >= 64rem) {
    .lg\:flex {
      display: flex;
    }
  }

  @media (width >= 64rem) {
    .lg\:hidden {
      display: none;
    }
  }

  @media (width >= 64rem) {
    .lg\:inline-flex {
      display: inline-flex;
    }
  }

  @media (width >= 64rem) {
    .lg\:h-36 {
      height: calc(var(--spacing) * 36);
    }
  }

  @media (width >= 64rem) {
    .lg\:h-\[calc\(100dvh-64px\)\] {
      height: calc(100dvh - 64px);
    }
  }

  @media (width >= 64rem) {
    .lg\:w-64 {
      width: calc(var(--spacing) * 64);
    }
  }

  @media (width >= 64rem) {
    .lg\:w-\[390px\] {
      width: 390px;
    }
  }

  @media (width >= 64rem) {
    .lg\:max-w-none {
      max-width: none;
    }
  }

  @media (width >= 64rem) {
    .lg\:shrink-0 {
      flex-shrink: 0;
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:flex-row {
      flex-direction: row;
    }
  }

  @media (width >= 64rem) {
    .lg\:justify-start {
      justify-content: flex-start;
    }
  }

  @media (width >= 64rem) {
    .lg\:overflow-x-hidden {
      overflow-x: hidden;
    }
  }

  @media (width >= 64rem) {
    .lg\:overflow-y-auto {
      overflow-y: auto;
    }
  }

  @media (width >= 64rem) {
    .lg\:border-t-0 {
      border-top-style: var(--tw-border-style);
      border-top-width: 0;
    }
  }

  @media (width >= 64rem) {
    .lg\:border-b {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 1px;
    }
  }

  @media (width >= 64rem) {
    .lg\:border-l {
      border-left-style: var(--tw-border-style);
      border-left-width: 1px;
    }
  }

  @media (width >= 64rem) {
    .lg\:px-8 {
      padding-inline: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 64rem) {
    .lg\:pr-8 {
      padding-right: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 64rem) {
    .lg\:opacity-0 {
      opacity: 0;
    }
  }

  @media (width >= 64rem) {
    .lg\:before\:bg-gray-100\/90:before {
      content: var(--tw-content);
      background-color: color-mix(in oklab, var(--color-gray-100) 90%, transparent);
    }
  }

  @media (width >= 64rem) {
    .lg\:first\:pl-8:first-child {
      padding-left: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 64rem) {
    .lg\:last\:pr-8:last-child {
      padding-right: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 64rem) {
    @media (hover: hover) {
      .lg\:hover\:bg-gray-200:hover {
        background-color: var(--color-gray-200);
      }
    }
  }

  @media (width >= 80rem) {
    .xl\:order-none {
      order: 0;
    }
  }

  @media (width >= 80rem) {
    .xl\:col-span-3 {
      grid-column: span 3 / span 3;
    }
  }

  @media (width >= 80rem) {
    .xl\:col-span-4 {
      grid-column: span 4 / span 4;
    }
  }

  @media (width >= 80rem) {
    .xl\:col-span-6 {
      grid-column: span 6 / span 6;
    }
  }

  @media (width >= 80rem) {
    .xl\:col-span-8 {
      grid-column: span 8 / span 8;
    }
  }

  @media (width >= 80rem) {
    .xl\:mx-0 {
      margin-inline: calc(var(--spacing) * 0);
    }
  }

  @media (width >= 80rem) {
    .xl\:mx-4 {
      margin-inline: calc(var(--spacing) * 4);
    }
  }

  @media (width >= 80rem) {
    .xl\:mr-4 {
      margin-right: calc(var(--spacing) * 4);
    }
  }

  @media (width >= 80rem) {
    .xl\:mb-0 {
      margin-bottom: calc(var(--spacing) * 0);
    }
  }

  @media (width >= 80rem) {
    .xl\:block {
      display: block;
    }
  }

  @media (width >= 80rem) {
    .xl\:flex {
      display: flex;
    }
  }

  @media (width >= 80rem) {
    .xl\:hidden {
      display: none;
    }
  }

  @media (width >= 80rem) {
    .xl\:max-h-\[128px\] {
      max-height: 128px;
    }
  }

  @media (width >= 80rem) {
    .xl\:w-\[18rem\] {
      width: 18rem;
    }
  }

  @media (width >= 80rem) {
    .xl\:-translate-x-16 {
      --tw-translate-x: calc(var(--spacing) * -16);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  @media (width >= 80rem) {
    .xl\:grid-cols-1 {
      grid-template-columns: repeat(1, minmax(0, 1fr));
    }
  }

  @media (width >= 80rem) {
    .xl\:flex-row {
      flex-direction: row;
    }
  }

  @media (width >= 80rem) {
    .xl\:flex-wrap {
      flex-wrap: wrap;
    }
  }

  @media (width >= 80rem) {
    .xl\:items-center {
      align-items: center;
    }
  }

  @media (width >= 80rem) {
    .xl\:justify-between {
      justify-content: space-between;
    }
  }

  @media (width >= 80rem) {
    :where(.xl\:space-y-0 > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  @media (width >= 80rem) {
    :where(.xl\:space-x-6 > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
    }
  }

  @media (width >= 80rem) {
    .xl\:pl-32 {
      padding-left: calc(var(--spacing) * 32);
    }
  }

  @media (width >= 80rem) {
    .xl\:text-left {
      text-align: left;
    }
  }

  @media (width >= 80rem) {
    .xl\:leading-8 {
      --tw-leading: calc(var(--spacing) * 8);
      line-height: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 96rem) {
    .\32 xl\:mx-8 {
      margin-inline: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 96rem) {
    .\32 xl\:block {
      display: block;
    }
  }

  @media (width >= 96rem) {
    .\32 xl\:hidden {
      display: none;
    }
  }

  @media (width >= 96rem) {
    .\32 xl\:\!w-64 {
      width: calc(var(--spacing) * 64) !important;
    }
  }

  @media (width >= 96rem) {
    .\32 xl\:max-w-none {
      max-width: none;
    }
  }

  @media (width >= 96rem) {
    .\32 xl\:opacity-100 {
      opacity: 1;
    }
  }

  .dark\:block:is(.dark *) {
    display: block;
  }

  .dark\:hidden:is(.dark *) {
    display: none;
  }

  :where(.dark\:divide-gray-700\/60:is(.dark *) > :not(:last-child)) {
    border-color: color-mix(in oklab, var(--color-gray-700) 60%, transparent);
  }

  .dark\:border-blue-700:is(.dark *) {
    border-color: var(--color-blue-700);
  }

  .dark\:border-gray-500:is(.dark *) {
    border-color: var(--color-gray-500);
  }

  .dark\:border-gray-600:is(.dark *) {
    border-color: var(--color-gray-600);
  }

  .dark\:border-gray-700:is(.dark *) {
    border-color: var(--color-gray-700);
  }

  .dark\:border-gray-700\/60:is(.dark *) {
    border-color: color-mix(in oklab, var(--color-gray-700) 60%, transparent);
  }

  .dark\:border-gray-800:is(.dark *) {
    border-color: var(--color-gray-800);
  }

  .dark\:border-gray-900:is(.dark *) {
    border-color: var(--color-gray-900);
  }

  .dark\:border-red-700:is(.dark *) {
    border-color: var(--color-red-700);
  }

  .dark\:border-violet-500:is(.dark *) {
    border-color: var(--color-violet-500);
  }

  .dark\:border-violet-800:is(.dark *) {
    border-color: var(--color-violet-800);
  }

  .dark\:border-violet-900\/50:is(.dark *) {
    border-color: color-mix(in oklab, var(--color-violet-900) 50%, transparent);
  }

  .dark\:bg-amber-900\/30:is(.dark *) {
    background-color: color-mix(in oklab, var(--color-amber-900) 30%, transparent);
  }

  .dark\:bg-black\/50:is(.dark *) {
    background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
  }

  .dark\:bg-blue-500\/10:is(.dark *) {
    background-color: color-mix(in oklab, var(--color-blue-500) 10%, transparent);
  }

  .dark\:bg-blue-500\/30:is(.dark *) {
    background-color: color-mix(in oklab, var(--color-blue-500) 30%, transparent);
  }

  .dark\:bg-blue-900\/30:is(.dark *) {
    background-color: color-mix(in oklab, var(--color-blue-900) 30%, transparent);
  }

  .dark\:bg-blue-900\/50:is(.dark *) {
    background-color: color-mix(in oklab, var(--color-blue-900) 50%, transparent);
  }

  .dark\:bg-gray-100:is(.dark *) {
    background-color: var(--color-gray-100);
  }

  .dark\:bg-gray-200:is(.dark *) {
    background-color: var(--color-gray-200);
  }

  .dark\:bg-gray-600:is(.dark *) {
    background-color: var(--color-gray-600);
  }

  .dark\:bg-gray-700:is(.dark *) {
    background-color: var(--color-gray-700);
  }

  .dark\:bg-gray-700\/20:is(.dark *) {
    background-color: color-mix(in oklab, var(--color-gray-700) 20%, transparent);
  }

  .dark\:bg-gray-700\/30:is(.dark *) {
    background-color: color-mix(in oklab, var(--color-gray-700) 30%, transparent);
  }

  .dark\:bg-gray-700\/50:is(.dark *) {
    background-color: color-mix(in oklab, var(--color-gray-700) 50%, transparent);
  }

  .dark\:bg-gray-700\/60:is(.dark *) {
    background-color: color-mix(in oklab, var(--color-gray-700) 60%, transparent);
  }

  .dark\:bg-gray-800:is(.dark *) {
    background-color: var(--color-gray-800);
  }

  .dark\:bg-gray-800\/50:is(.dark *) {
    background-color: color-mix(in oklab, var(--color-gray-800) 50%, transparent);
  }

  .dark\:bg-gray-800\/60:is(.dark *) {
    background-color: color-mix(in oklab, var(--color-gray-800) 60%, transparent);
  }

  .dark\:bg-gray-900:is(.dark *) {
    background-color: var(--color-gray-900);
  }

  .dark\:bg-gray-950\/\[0\.15\]:is(.dark *) {
    background-color: color-mix(in oklab, var(--color-gray-950) 15%, transparent);
  }

  .dark\:bg-green-900\/30:is(.dark *) {
    background-color: color-mix(in oklab, var(--color-green-900) 30%, transparent);
  }

  .dark\:bg-purple-900\/30:is(.dark *) {
    background-color: color-mix(in oklab, var(--color-purple-900) 30%, transparent);
  }

  .dark\:bg-red-900\/30:is(.dark *) {
    background-color: color-mix(in oklab, var(--color-red-900) 30%, transparent);
  }

  .dark\:bg-red-900\/50:is(.dark *) {
    background-color: color-mix(in oklab, var(--color-red-900) 50%, transparent);
  }

  .dark\:bg-violet-500\/10:is(.dark *) {
    background-color: color-mix(in oklab, var(--color-violet-500) 10%, transparent);
  }

  .dark\:bg-violet-900\/20:is(.dark *) {
    background-color: color-mix(in oklab, var(--color-violet-900) 20%, transparent);
  }

  .dark\:bg-violet-900\/30:is(.dark *) {
    background-color: color-mix(in oklab, var(--color-violet-900) 30%, transparent);
  }

  .dark\:from-gray-700:is(.dark *) {
    --tw-gradient-from: var(--color-gray-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:from-gray-700\/30:is(.dark *) {
    --tw-gradient-from: color-mix(in oklab, var(--color-gray-700) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:from-gray-800:is(.dark *) {
    --tw-gradient-from: var(--color-gray-800);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:from-gray-800\/30:is(.dark *) {
    --tw-gradient-from: color-mix(in oklab, var(--color-gray-800) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:from-violet-500\/\[0\.24\]:is(.dark *) {
    --tw-gradient-from: color-mix(in oklab, var(--color-violet-500) 24%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:to-gray-700:is(.dark *) {
    --tw-gradient-to: var(--color-gray-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:to-gray-800:is(.dark *) {
    --tw-gradient-to: var(--color-gray-800);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:to-gray-900:is(.dark *) {
    --tw-gradient-to: var(--color-gray-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:fill-gray-500:is(.dark *) {
    fill: var(--color-gray-500);
  }

  .dark\:fill-violet-500\/30:is(.dark *) {
    fill: color-mix(in oklab, var(--color-violet-500) 30%, transparent);
  }

  .dark\:text-amber-400:is(.dark *) {
    color: var(--color-amber-400);
  }

  .dark\:text-blue-200:is(.dark *) {
    color: var(--color-blue-200);
  }

  .dark\:text-blue-300:is(.dark *) {
    color: var(--color-blue-300);
  }

  .dark\:text-blue-400:is(.dark *) {
    color: var(--color-blue-400);
  }

  .dark\:text-gray-100:is(.dark *) {
    color: var(--color-gray-100);
  }

  .dark\:text-gray-200:is(.dark *) {
    color: var(--color-gray-200);
  }

  .dark\:text-gray-300:is(.dark *) {
    color: var(--color-gray-300);
  }

  .dark\:text-gray-400:is(.dark *) {
    color: var(--color-gray-400);
  }

  .dark\:text-gray-400\/80:is(.dark *) {
    color: color-mix(in oklab, var(--color-gray-400) 80%, transparent);
  }

  .dark\:text-gray-500:is(.dark *) {
    color: var(--color-gray-500);
  }

  .dark\:text-gray-600:is(.dark *) {
    color: var(--color-gray-600);
  }

  .dark\:text-gray-700:is(.dark *) {
    color: var(--color-gray-700);
  }

  .dark\:text-gray-800:is(.dark *) {
    color: var(--color-gray-800);
  }

  .dark\:text-green-400:is(.dark *) {
    color: var(--color-green-400);
  }

  .dark\:text-purple-300:is(.dark *) {
    color: var(--color-purple-300);
  }

  .dark\:text-purple-400:is(.dark *) {
    color: var(--color-purple-400);
  }

  .dark\:text-red-300:is(.dark *) {
    color: var(--color-red-300);
  }

  .dark\:text-red-400:is(.dark *) {
    color: var(--color-red-400);
  }

  .dark\:text-violet-200:is(.dark *) {
    color: var(--color-violet-200);
  }

  .dark\:text-violet-300:is(.dark *) {
    color: var(--color-violet-300);
  }

  .dark\:text-violet-400:is(.dark *) {
    color: var(--color-violet-400);
  }

  .dark\:text-yellow-500:is(.dark *) {
    color: var(--color-yellow-500);
  }

  .dark\:placeholder-gray-500:is(.dark *)::placeholder {
    color: var(--color-gray-500);
  }

  @media (hover: hover) {
    .dark\:group-hover\:text-gray-200:is(.dark *):is(:where(.group):hover *) {
      color: var(--color-gray-200);
    }
  }

  @media (hover: hover) {
    .dark\:group-hover\:text-gray-400:is(.dark *):is(:where(.group):hover *) {
      color: var(--color-gray-400);
    }
  }

  @media (hover: hover) {
    .dark\:group-hover\:text-white:is(.dark *):is(:where(.group):hover *) {
      color: var(--color-white);
    }
  }

  .dark\:peer-checked\:border-violet-500:is(.dark *):is(:where(.peer):checked ~ *) {
    border-color: var(--color-violet-500);
  }

  .dark\:before\:bg-gray-800:is(.dark *):before {
    content: var(--tw-content);
    background-color: var(--color-gray-800);
  }

  .dark\:before\:bg-gray-900:is(.dark *):before {
    content: var(--tw-content);
    background-color: var(--color-gray-900);
  }

  .dark\:after\:bg-gray-700\/60:is(.dark *):after {
    content: var(--tw-content);
    background-color: color-mix(in oklab, var(--color-gray-700) 60%, transparent);
  }

  .dark\:after\:text-gray-600:is(.dark *):after {
    content: var(--tw-content);
    color: var(--color-gray-600);
  }

  @media (hover: hover) {
    .dark\:hover\:border-gray-600:is(.dark *):hover {
      border-color: var(--color-gray-600);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-blue-900\/50:is(.dark *):hover {
      background-color: color-mix(in oklab, var(--color-blue-900) 50%, transparent);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-gray-600:is(.dark *):hover {
      background-color: var(--color-gray-600);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-gray-700:is(.dark *):hover {
      background-color: var(--color-gray-700);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-gray-700\/20:is(.dark *):hover {
      background-color: color-mix(in oklab, var(--color-gray-700) 20%, transparent);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-gray-700\/50:is(.dark *):hover {
      background-color: color-mix(in oklab, var(--color-gray-700) 50%, transparent);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-gray-800:is(.dark *):hover {
      background-color: var(--color-gray-800);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-gray-900:is(.dark *):hover {
      background-color: var(--color-gray-900);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-gray-900\/50:is(.dark *):hover {
      background-color: color-mix(in oklab, var(--color-gray-900) 50%, transparent);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-purple-900\/50:is(.dark *):hover {
      background-color: color-mix(in oklab, var(--color-purple-900) 50%, transparent);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-violet-900\/30:is(.dark *):hover {
      background-color: color-mix(in oklab, var(--color-violet-900) 30%, transparent);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-white:is(.dark *):hover {
      background-color: var(--color-white);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:text-gray-100:is(.dark *):hover {
      color: var(--color-gray-100);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:text-gray-200:is(.dark *):hover {
      color: var(--color-gray-200);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:text-gray-300:is(.dark *):hover {
      color: var(--color-gray-300);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:text-gray-400:is(.dark *):hover {
      color: var(--color-gray-400);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:text-gray-500:is(.dark *):hover {
      color: var(--color-gray-500);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:text-violet-400:is(.dark *):hover {
      color: var(--color-violet-400);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:text-violet-500:is(.dark *):hover {
      color: var(--color-violet-500);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:text-white:is(.dark *):hover {
      color: var(--color-white);
    }
  }

  .dark\:disabled\:border-gray-700:is(.dark *):disabled {
    border-color: var(--color-gray-700);
  }

  .dark\:disabled\:bg-gray-800:is(.dark *):disabled {
    background-color: var(--color-gray-800);
  }

  .dark\:disabled\:text-gray-600:is(.dark *):disabled {
    color: var(--color-gray-600);
  }

  .dark\:disabled\:placeholder\:text-gray-600:is(.dark *):disabled::placeholder {
    color: var(--color-gray-600);
  }

  @media (width < 64rem) {
    .dark\:max-lg\:before\:bg-gray-800\/90:is(.dark *):before {
      content: var(--tw-content);
      background-color: color-mix(in oklab, var(--color-gray-800) 90%, transparent);
    }
  }

  @media (width >= 64rem) {
    .dark\:lg\:before\:bg-gray-900\/90:is(.dark *):before {
      content: var(--tw-content);
      background-color: color-mix(in oklab, var(--color-gray-900) 90%, transparent);
    }
  }

  @media (width >= 64rem) {
    @media (hover: hover) {
      .dark\:lg\:hover\:bg-gray-800:is(.dark *):hover {
        background-color: var(--color-gray-800);
      }
    }
  }

  .sidebar-expanded\:rotate-180:is(.sidebar-expanded *) {
    rotate: 180deg;
  }

  @media (width >= 64rem) {
    .lg\:sidebar-expanded\:block:is(.sidebar-expanded *) {
      display: block;
    }
  }

  @media (width >= 64rem) {
    .lg\:sidebar-expanded\:hidden:is(.sidebar-expanded *) {
      display: none;
    }
  }

  @media (width >= 64rem) {
    .lg\:sidebar-expanded\:\!w-64:is(.sidebar-expanded *) {
      width: calc(var(--spacing) * 64) !important;
    }
  }

  @media (width >= 64rem) {
    .lg\:sidebar-expanded\:opacity-100:is(.sidebar-expanded *) {
      opacity: 1;
    }
  }

  .\[\&_svg\]\:pointer-events-none svg {
    pointer-events: none;
  }

  .\[\&_svg\]\:size-4 svg {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .\[\&_svg\]\:shrink-0 svg {
    flex-shrink: 0;
  }

  .\[\&\:has\(\[aria-selected\]\)\]\:bg-violet-500:has([aria-selected]) {
    background-color: var(--color-violet-500);
  }

  .first\:\[\&\:has\(\[aria-selected\]\)\]\:rounded-l-md:first-child:has([aria-selected]) {
    border-top-left-radius: var(--radius-md);
    border-bottom-left-radius: var(--radius-md);
  }

  .last\:\[\&\:has\(\[aria-selected\]\)\]\:rounded-r-md:last-child:has([aria-selected]) {
    border-top-right-radius: var(--radius-md);
    border-bottom-right-radius: var(--radius-md);
  }

  .\[\&\:has\(\[aria-selected\]\.day-outside\)\]\:bg-green-500\/50:has([aria-selected].day-outside) {
    background-color: color-mix(in oklab, var(--color-green-500) 50%, transparent);
  }

  .\[\&\:has\(\[aria-selected\]\.day-range-end\)\]\:rounded-r-md:has([aria-selected].day-range-end) {
    border-top-right-radius: var(--radius-md);
    border-bottom-right-radius: var(--radius-md);
  }

  .\[\&\>\*\:first-child\]\:scroll-mt-16 > :first-child {
    scroll-margin-top: calc(var(--spacing) * 16);
  }

  .\[\&\>svg\]\:text-gray-400 > svg {
    color: var(--color-gray-400);
  }

  .\[\&\>svg\]\:text-violet-500 > svg {
    color: var(--color-violet-500);
  }

  .dark\:\[\&\>svg\]\:text-gray-500:is(.dark *) > svg {
    color: var(--color-gray-500);
  }
}

@layer components {
  .h1 {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
    letter-spacing: var(--tw-tracking, var(--text-4xl--letter-spacing));
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
    --tw-tracking: var(--tracking-tighter);
    letter-spacing: var(--tracking-tighter);
  }

  .h2 {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
    letter-spacing: var(--tw-tracking, var(--text-3xl--letter-spacing));
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
    --tw-tracking: var(--tracking-tighter);
    letter-spacing: var(--tracking-tighter);
  }

  .h3 {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
    letter-spacing: var(--tw-tracking, var(--text-3xl--letter-spacing));
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
  }

  .h4 {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
    letter-spacing: var(--tw-tracking, var(--text-2xl--letter-spacing));
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }

  @media (width >= 48rem) {
    .h1 {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
      letter-spacing: var(--tw-tracking, var(--text-5xl--letter-spacing));
    }

    .h2 {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
      letter-spacing: var(--tw-tracking, var(--text-4xl--letter-spacing));
    }
  }

  .btn, .btn-lg, .btn-sm, .btn-xs {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--radius-lg);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: #0000;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-leading: calc(var(--spacing) * 5);
    line-height: calc(var(--spacing) * 5);
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    --tw-shadow: 0 1px 1px 0 var(--tw-shadow-color, #0000000d), 0 1px 2px 0 var(--tw-shadow-color, #00000005);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .btn {
    padding-inline: calc(var(--spacing) * 3);
    padding-block: calc(var(--spacing) * 2);
  }

  .btn-lg {
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 3);
  }

  .btn-sm {
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 1);
  }

  .btn-xs {
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * .5);
  }

  input[type="search"]::-webkit-search-decoration, input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-results-button, input[type="search"]::-webkit-search-results-decoration {
    -webkit-appearance: none;
  }

  .form-input, .form-textarea, .form-multiselect, .form-select, .form-checkbox, .form-radio {
    border-style: var(--tw-border-style);
    border-width: 1px;
    background-color: var(--color-white);
  }

  :is(.form-input, .form-textarea, .form-multiselect, .form-select, .form-checkbox, .form-radio):focus {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  :is(.form-input, .form-textarea, .form-multiselect, .form-select, .form-checkbox, .form-radio):focus {
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }

  :is(.form-input, .form-textarea, .form-multiselect, .form-select, .form-checkbox, .form-radio):is(.dark *) {
    background-color: color-mix(in oklab, var(--color-gray-900) 30%, transparent);
  }

  :is(.form-input, .form-textarea, .form-multiselect, .form-select, .form-checkbox, .form-radio):is(.dark *):disabled {
    border-color: var(--color-gray-700);
  }

  :is(.form-input, .form-textarea, .form-multiselect, .form-select, .form-checkbox, .form-radio):is(.dark *):disabled {
    background-color: color-mix(in oklab, var(--color-gray-700) 30%, transparent);
  }

  @media (hover: hover) {
    :is(.form-input, .form-textarea, .form-multiselect, .form-select, .form-checkbox, .form-radio):is(.dark *):disabled:hover {
      border-color: var(--color-gray-700);
    }
  }

  .form-checkbox {
    border-radius: var(--radius-sm);
  }

  .form-input, .form-textarea, .form-multiselect, .form-select {
    border-radius: var(--radius-lg);
    border-color: var(--color-gray-200);
    padding-inline: calc(var(--spacing) * 3);
    padding-block: calc(var(--spacing) * 2);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-leading: calc(var(--spacing) * 5);
    line-height: calc(var(--spacing) * 5);
    color: var(--color-gray-800);
    --tw-shadow: 0 1px 1px 0 var(--tw-shadow-color, #0000000d), 0 1px 2px 0 var(--tw-shadow-color, #00000005);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  @media (hover: hover) {
    :is(.form-input, .form-textarea, .form-multiselect, .form-select):hover {
      border-color: var(--color-gray-300);
    }
  }

  :is(.form-input, .form-textarea, .form-multiselect, .form-select):focus {
    border-color: var(--color-gray-300);
  }

  :is(.form-input, .form-textarea, .form-multiselect, .form-select):is(.dark *) {
    border-color: color-mix(in oklab, var(--color-gray-700) 60%, transparent);
  }

  :is(.form-input, .form-textarea, .form-multiselect, .form-select):is(.dark *) {
    color: var(--color-gray-100);
  }

  @media (hover: hover) {
    :is(.form-input, .form-textarea, .form-multiselect, .form-select):is(.dark *):hover {
      border-color: var(--color-gray-600);
    }
  }

  :is(.form-input, .form-textarea, .form-multiselect, .form-select):is(.dark *):focus {
    border-color: var(--color-gray-600);
  }

  :is(.form-input, .form-textarea)::placeholder {
    color: var(--color-gray-400);
  }

  :is(.form-input, .form-textarea):is(.dark *)::placeholder {
    color: var(--color-gray-500);
  }

  .form-select {
    padding-right: calc(var(--spacing) * 10);
  }

  .form-checkbox, .form-radio {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-gray-300);
    color: var(--color-violet-500);
  }

  :is(.form-checkbox, .form-radio):checked {
    border-color: #0000;
  }

  :is(.form-checkbox, .form-radio):checked {
    background-color: var(--color-violet-500);
  }

  :is(.form-checkbox, .form-radio):focus-visible:not(:checked) {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  :is(.form-checkbox, .form-radio):focus-visible:not(:checked) {
    --tw-ring-color: color-mix(in oklab, var(--color-violet-500) 50%, transparent);
  }

  :is(.form-checkbox, .form-radio):is(.dark *) {
    border-color: color-mix(in oklab, var(--color-gray-700) 60%, transparent);
  }

  :is(.form-checkbox, .form-radio):is(.dark *):checked {
    border-color: #0000;
  }

  .form-switch {
    position: relative;
    -webkit-user-select: none;
    user-select: none;
    width: 44px;
  }

  .form-switch label {
    display: block;
    height: calc(var(--spacing) * 6);
    cursor: pointer;
    overflow: hidden;
    border-radius: 3.40282e38px;
  }

  .form-switch label > span:first-child {
    position: absolute;
    display: block;
    border-radius: 3.40282e38px;
    width: 20px;
    height: 20px;
    top: 2px;
    left: 2px;
    right: 50%;
    transition: all .15s ease-out;
  }

  .form-switch input[type="checkbox"] + label {
    background-color: var(--color-gray-400);
  }

  .form-switch input[type="checkbox"] + label:is(.dark *) {
    background-color: var(--color-gray-700);
  }

  .form-switch input[type="checkbox"]:checked + label {
    background-color: var(--color-violet-500);
  }

  .form-switch input[type="checkbox"]:checked + label > span:first-child {
    left: 22px;
  }

  .form-switch input[type="checkbox"]:disabled + label {
    cursor: not-allowed;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-gray-200);
    background-color: var(--color-gray-100);
  }

  .form-switch input[type="checkbox"]:disabled + label:is(.dark *) {
    border-color: color-mix(in oklab, var(--color-gray-700) 60%, transparent);
  }

  .form-switch input[type="checkbox"]:disabled + label:is(.dark *) {
    background-color: color-mix(in oklab, var(--color-gray-700) 20%, transparent);
  }

  .form-switch input[type="checkbox"]:disabled + label > span:first-child {
    background-color: var(--color-gray-400);
  }

  .form-switch input[type="checkbox"]:disabled + label > span:first-child:is(.dark *) {
    background-color: var(--color-gray-600);
  }

  .no-scrollbar::-webkit-scrollbar {
    display: none;
  }

  .no-scrollbar {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
}

@layer base {
  *, :after, :before, ::backdrop, ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@layer base {
  [type="text"], input:where(:not([type])), [type="email"], [type="url"], [type="password"], [type="number"], [type="date"], [type="datetime-local"], [type="month"], [type="search"], [type="tel"], [type="time"], [type="week"], [multiple], textarea, select {
    appearance: none;
    background-color: #fff;
    border-color: #6b7280;
    border-width: 1px;
    border-radius: 0;
    padding-top: .5rem;
    padding-right: .75rem;
    padding-bottom: .5rem;
    padding-left: .75rem;
    font-size: 1rem;
    line-height: 1.5rem;
    --tw-shadow: 0 0 #0000;
  }

  :is([type="text"], input:where(:not([type])), [type="email"], [type="url"], [type="password"], [type="number"], [type="date"], [type="datetime-local"], [type="month"], [type="search"], [type="tel"], [type="time"], [type="week"], [multiple], textarea, select):focus {
    outline: 2px solid #0000;
    outline-offset: 2px;
    --tw-ring-inset: var(--tw-empty, );
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: oklch(.546 .245 262.881);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    border-color: oklch(.546 .245 262.881);
  }

  input::placeholder, textarea::placeholder {
    color: #6b7280;
    opacity: 1;
  }

  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }

  ::-webkit-date-and-time-value {
    min-height: 1.5em;
  }

  ::-webkit-date-and-time-value {
    text-align: inherit;
  }

  ::-webkit-datetime-edit {
    display: inline-flex;
  }

  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  select {
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
    background-position: right .5rem center;
    background-repeat: no-repeat;
    background-size: 1.5em 1.5em;
    padding-right: 2.5rem;
    print-color-adjust: exact;
  }

  [multiple], [size]:where(select:not([size="1"])) {
    background-image: initial;
    background-position: initial;
    background-repeat: unset;
    background-size: initial;
    padding-right: .75rem;
    print-color-adjust: unset;
  }

  [type="checkbox"], [type="radio"] {
    appearance: none;
    padding: 0;
    print-color-adjust: exact;
    display: inline-block;
    vertical-align: middle;
    background-origin: border-box;
    user-select: none;
    flex-shrink: 0;
    height: 1rem;
    width: 1rem;
    color: oklch(.546 .245 262.881);
    background-color: #fff;
    border-color: #6b7280;
    border-width: 1px;
    --tw-shadow: 0 0 #0000;
  }

  [type="checkbox"] {
    border-radius: 0;
  }

  [type="radio"] {
    border-radius: 100%;
  }

  [type="checkbox"]:focus, [type="radio"]:focus {
    outline: 2px solid #0000;
    outline-offset: 2px;
    --tw-ring-inset: var(--tw-empty, );
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: oklch(.546 .245 262.881);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  [type="checkbox"]:checked, [type="radio"]:checked {
    border-color: #0000;
    background-color: currentColor;
    background-size: 100% 100%;
    background-position: center;
    background-repeat: no-repeat;
  }

  [type="checkbox"]:checked {
    background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
  }

  @media (forced-colors: active) {
    [type="checkbox"]:checked {
      appearance: auto;
    }
  }

  [type="radio"]:checked {
    background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e");
  }

  @media (forced-colors: active) {
    [type="radio"]:checked {
      appearance: auto;
    }
  }

  [type="checkbox"]:checked:hover, [type="checkbox"]:checked:focus, [type="radio"]:checked:hover, [type="radio"]:checked:focus {
    border-color: #0000;
    background-color: currentColor;
  }

  [type="checkbox"]:indeterminate {
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e");
    border-color: #0000;
    background-color: currentColor;
    background-size: 100% 100%;
    background-position: center;
    background-repeat: no-repeat;
  }

  @media (forced-colors: active) {
    [type="checkbox"]:indeterminate {
      appearance: auto;
    }
  }

  [type="checkbox"]:indeterminate:hover, [type="checkbox"]:indeterminate:focus {
    border-color: #0000;
    background-color: currentColor;
  }

  [type="file"] {
    background: unset;
    border-color: inherit;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-size: unset;
    line-height: inherit;
  }

  [type="file"]:focus {
    outline: 1px solid buttontext;
    outline: 1px auto -webkit-focus-ring-color;
  }
}

@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}

@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}

@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}

@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}

@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}

@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-gradient-position {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}

@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}

@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-leading {
  syntax: "*";
  inherits: false
}

@property --tw-font-weight {
  syntax: "*";
  inherits: false
}

@property --tw-ordinal {
  syntax: "*";
  inherits: false
}

@property --tw-slashed-zero {
  syntax: "*";
  inherits: false
}

@property --tw-numeric-figure {
  syntax: "*";
  inherits: false
}

@property --tw-numeric-spacing {
  syntax: "*";
  inherits: false
}

@property --tw-numeric-fraction {
  syntax: "*";
  inherits: false
}

@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
  syntax: "*";
  inherits: false
}

@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}

@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}

@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-blur {
  syntax: "*";
  inherits: false
}

@property --tw-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-invert {
  syntax: "*";
  inherits: false
}

@property --tw-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-duration {
  syntax: "*";
  inherits: false
}

@property --tw-ease {
  syntax: "*";
  inherits: false
}

@property --tw-content {
  syntax: "*";
  inherits: false;
  initial-value: "";
}

@property --tw-tracking {
  syntax: "*";
  inherits: false
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/*# sourceMappingURL=app_css_style_b52d8e.css.map*/